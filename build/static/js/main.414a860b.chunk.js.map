{"version":3,"sources":["components/Charts/chart-defaults.js","components/Charts/agechart.js","constants.js","utils/commonfunctions.js","components/Charts/allstates.js","components/Charts/dailyconfirmedchart.js","components/Charts/genderchart.js","components/Charts/growthtrendchart.js","components/Charts/nationalitychart.js","components/Charts/totalconfirmedchart.js","components/deepdive.js","components/faq.js","components/navbar.js","components/downloadblock.js","components/footer.js","components/patientsview.js","components/patients.js","components/patientdb.js","components/Essentials/essentialsfiltersdesktop.js","components/Essentials/essentialsfiltersmobile.js","components/Essentials/essentialsutls.js","components/Essentials/essentialsaccordionmobile.js","components/resourcetable.js","components/resources.js","components/deltabargraph.js","components/level.js","components/legend.js","components/choropleth.js","components/mapexplorer.js","components/minigraph.js","components/timeseries.js","utils/hooks.js","components/state.js","utils/ScrollToTop.js","App.js","serviceWorker.js","index.js"],"names":["defaults","global","deepmerge","defaultFontFamily","elements","line","fill","point","pointStyle","tooltips","intersect","mode","position","displayColors","borderWidth","titleSpacing","titleMarginBottom","bodySpacing","cornerRadius","xPadding","yPadding","caretSize","legend","display","labels","padding","usePointStyle","hover","layout","left","right","top","bottom","formatNumber","number","window","Intl","NumberFormat","format","defaultOptions","responsive","events","maintainAspectRatio","backgroundColor","titleFontColor","bodyFontColor","callbacks","label","tooltipItem","data","datasets","datasetIndex","Math","round","yLabel","radius","tension","yAxisDefaults","type","ticks","beginAtZero","max","undefined","precision","callback","value","gridLines","color","drawBorder","tickMarkLength","xAxisDefaults","AgeChart","props","ages","Array","length","forEach","patient","agebracket","age","parseInt","i","chartData","chartOptions","scales","xAxes","stacked","yAxes","sampleSize","reduce","a","b","className","title","options","MAP_TYPES","MAPS_DIR","process","MAP_META","India","name","geoDataFile","mapType","graphObjectName","Assam","Bihar","Chandigarh","Chhattisgarh","Delhi","Karnataka","Kerala","Goa","Gujarat","Haryana","Jharkhand","Ladakh","Lakshadweep","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Puducherry","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","STATE_CODES","AP","AR","AS","BR","CT","GA","GJ","HR","HP","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DD","DL","JK","LA","LD","PY","reverseStateCodes","Object","keys","map","key","index","stateCodes","push","code","months","getStateName","toUpperCase","formatDate","unformattedDate","day","slice","month","year","time","numberFormatter","isNaN","parseStateTimeseries","states_daily","statewiseSeries","c","today","moment","utcOffset","date","isBefore","entries","k","v","stateCode","toLowerCase","prev","dailyconfirmed","dailyrecovered","dailydeceased","totalconfirmed","totalrecovered","totaldeceased","toDate","totalactive","dailyactive","AllStatesChart","dates","chartReference","React","createRef","statesData","Map","status","trim","has","set","previousValue","get","currentValue","sortedMap","sort","colors","borderCapStyle","pointBackgroundColor","borderColor","pointHoverRadius","dataset","boxWidth","fontSize","scaleLabel","labelString","unit","tooltipFormat","stepSize","displayFormats","millisecond","second","minute","hour","week","quarter","ref","style","marginTop","height","onClick","ci","current","chartInstance","meta","getDatasetMeta","hidden","update","DailyConfirmedChart","confirmed","recovered","deceased","timeseries","barDataSet","reverse","generateLabels","chart","GenderChart","male","female","gender","total","_meta","percentage","parseFloat","toFixed","GrowthTrendChart","caretPadding","statesDailyData","x","stateData","weekSum","idx","y","order","cubicInterpolationMode","min","values","Number","toString","NationalityChart","nationality","hasOwnProperty","country","TotalConfirmedChart","DeepDive","useState","fetched","setFetched","setTimeseries","rawData","setRawData","statesTimeSeries","setStatesTimeSeries","useEffect","getStates","Promise","all","axios","response","rawDataResponse","stateDailyResponse","cases_time_series","raw_data","console","log","animationDelay","FAQ","faq","setFaq","getFAQs","scrollTo","then","catch","error","question","dangerouslySetInnerHTML","__html","answer","activeNavIcon","path","stroke","location","pathname","Expand","expand","pages","setExpand","expandElement","useRef","useEffectOnce","anime","targets","translateX","easing","duration","onMouseLeave","page","showInNavbar","to","pageLink","animationDelayForNavbar","displayName","Navbar","darkMode","setDarkMode","useLockBodyScroll","prevMode","onMouseEnter","innerWidth","strokeDashoffset","setDashoffset","delay","el","direction","loop","Fragment","memo","target","href","rel","justifyContent","PatientsView","logs","summary","setModal","setPatient","applyClass","Date","indexTwo","patientnumber","Patients","patients","setPatients","setLogs","modal","onclick","event","document","getElementById","parseByDate","useCallback","parse","dateannounced","list","colorMode","typeoftransmission","getClassNameFn","id","patientIndexArg","patientIndex","err","switchPatient","contractedfromwhichpatientsuspected","detectedcity","detecteddistrict","detectedstate","statepatientnumber","notes","source1","source2","source3","filterByObject","obj","filters","filter","p","every","PatientDB","filteredPatients","setFilteredPatients","useLocation","setColorMode","scaleMode","setScaleMode","subDays","filterDate","setFilterDate","useLocalStorage","showReminder","setShowReminder","message","setMessage","loading","setLoading","setFilters","querySelectorAll","setAttribute","handleFilters","f","newFilters","district","city","selectedIndex","getSortedValues","setValues","Set","size","add","from","stateList","state","onChange","defaultValue","disabled","minDate","maxDate","calendarIcon","inputProps","onkeydown","e","preventDefault","clearIcon","fomattedDate","checked","useFormControlStyles","makeStyles","isDesktop","root","margin","flexGrow","width","useInputLabelStyles","fontFamily","fontWeight","textTransform","useMenuItemStyles","usePopOverStyles","zIndex","FiltersDesktop","classesFormControl","classesInputLabel","classesMenuItem","classesPopOver","flexDirection","alignItems","handleDisclaimerClick","htmlColor","Popover","disclaimerid","open","isDisclaimerOpen","classes","anchorEl","onClose","handleDisclaimerClose","anchorOrigin","vertical","horizontal","transformOrigin","paddingLeft","FormControl","variant","InputLabel","Select","native","labelId","indianstate","changeIndianState","stateoptions","changeCity","cityoptions","category","changeCategory","servicesoptions","filterTable","marginBottom","openSharingTray","FiltersMobile","popoverid","getFormattedLink","initialValue","s3","match","formatedLink","numberList","split","getNumbersLink","links","JSON","stringify","String","replace","getHighlightedText","text","searchValue","regexObject","RegExp","parts","matches","matchAll","joinVals","result","customJoinHighlight","customJoinHighlightMobile","usePanelSummaryStyles","theme","content","usePanelDetailsStyles","useListStyles","usePanelStyles","useItemTextStyles","primary","fontStyle","fontTransform","secondary","wordWrap","TableAccordion","rows","classesPannelSummary","classesPanel","classesListItemText","classesPanelDetails","classesList","expanded","setExpanded","row","ExpansionPanel","panel","isExpanded","ExpansionPanelSummary","maxWidth","textAlign","limit","charAt","substring","parseText","ExpansionPanelDetails","List","disablePadding","dense","ListItem","divider","ListItemText","secondaryTypographyProps","component","contact","ResourceTable","columns","totalCount","onScrollUpdate","setSearchValue","suggestions","setSuggestions","prevIndianState","prevCity","prevCategory","renderCell","celli","cell","renderedvalue","link","allCells","column","resources","inputValue","resource","indexOf","descriptionandorserviceprovided","nameoftheorganisation","getSuggestions","setInterval","newVal","useTable","initialState","hiddenColumns","getTableProps","getTableBodyProps","headerGroups","prepareRow","TextField","fullWidth","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","dataLength","hasMore","next","loader","src","alt","overflow","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","cells","cellindex","getCellProps","Resources","setData","partData","setPartData","setCity","setCategory","setIndianState","resourcedict","setResourceDict","showTable","setShowTable","setIsDesktop","hasScrolled","setHasScrolled","setAnchorEl","getResources","checkForResizeEvent","addEventListener","removeEventListener","checkScrollEvent","pageYOffset","hashmap","isArray","currentTarget","Boolean","memocols","useMemo","Header","accessor","isVisible","getCityOptions","getIndianStateOptions","getCategoryOptions","array","citydata","categorydata","element","changedstateevent","changedcityevent","changedcategoryevent","navigator","share","url","shareUri","encodeURI","screen","w","h","openSharingLink","tempArr","concat","Fade","in","Fab","aria-label","body","behavior","documentElement","strokeWidth","arrayKey","svgRef","svg","d3","chartRight","attr","chartBottom","formatTime","xScale","domain","d","range","paddingInner","yScale","xAxis","tickSize","select","call","g","remove","selectAll","join","r","y0","roundedBar","bandwidth","append","viewBox","preserveAspectRatio","active","deaths","deltaconfirmed","deltadeaths","deltarecovered","ramp","n","canvas","createElement","context","getContext","fillStyle","fillRect","marginRight","marginLeft","tickFormat","tickValues","tickAdjust","interpolate","copy","rangeRound","toDataURL","interpolator","assign","invertExtent","thresholds","quantiles","thresholdFormat","node","propertyFieldMap","statistic","mapData","setHoveredRegion","mapMeta","changeMap","selectedRegion","setSelectedRegion","isCountryLoaded","mapOption","choroplethMap","choroplethLegend","svgRenderCount","setSvgRenderCount","ready","geoData","propertyField","topology","topojson","objects","projection","widthStyle","fitWidth","heightStyle","fitSize","bBox","bounds","svgLegend","colorScale","t","widthLegend","barWidth","heightLegend","isInteger","onceTouchedRegion","features","region","properties","on","handleMouseEnter","stopPropagation","toTitleCase","str","prevCount","classed","nodes","parentNode","appendChild","Unknown","getRegionFromState","states","stateDistrictWiseData","stateTestData","regionHighlighted","onMapHighlightChange","anchor","setAnchor","mapOptionProp","panelRegion","setPanelRegion","currentHoveredRegion","setCurrentHoveredRegion","testObj","setTestObj","currentMap","setCurrentMap","setMapOption","dataTypes","acc","dtype","currentMapData","typeCount","districtWiseData","districtData","find","getRegionFromDistrict","statecode","districtName","newMap","switchMapToState","topDistrict","totaltested","updatedon","source","lastupdatedtime","formatDistance","timeSeriesData","setTimeSeriesData","svgRef1","svgRef2","svgRef3","svgRef4","graphData","svg1","svg2","svg3","svg4","svgArray","dailyMin","dailyMax","domainMinMax","datum","curve","totalLength","getTotalLength","transition","enter","Infinity","lastDaysCount","setLastDaysCount","datapoint","setDatapoint","setIndex","setMode","logMode","setLogMode","chartType","setChartType","moving","setMoving","wrapperRef","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","observer","entry","contentRect","observe","unobserve","useResizeObserver","transformTimeSeries","slicedTimeseries","days","sliceTimeseriesFromEnd","T","dateMin","setDate","getDate","dateMax","yScales","clamp","numTicksX","xAxis2","yAxis","tickPadding","plotTotal","dataTypesTotal","dataTypesDaily","uniformScaleMin","yScaleUniformLinear","nice","yScaleUniformLog","yScaleLinear","yScaleLog","yScaleDailyUniform","focus","typeTotal","typeDaily","getPointAtLength","repeat","mousemove","mouseout","xm","this","invert","bisectDate","j","focusDate","dateStr","isSame","subtract","chartKey1","chartKey2","chartKey3","chartKey4","currentStatusCount","currentDiff","formatedDiff","mapRef","tsRef","graphOption","setGraphOption","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","setStateData","testData","setTestData","sources","setSources","setDistrictData","stateName","useMeasure","mapSwitcher","getState","dataResponse","stateDistrictWiseResponse","statesDailyResponse","stateTestResponse","sourcesResponse","statewise","s","ts","statesTests","states_tested_data","sourceList","sources_list","opacity","testObjLast","formatDateAbsolute","transform","forwardRef","num","delta","htmlFor","ScrollToTop","App","view","State","querySelector","classList","ReactGA","initialize","search","pageview","exact","hostname","ReactDOM","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.414a860b.chunk.js","sourcesContent":["import deepmerge from 'deepmerge';\nimport {defaults} from 'react-chartjs-2';\n\ndefaults.global = deepmerge(defaults.global, {\n  defaultFontFamily: 'Archia',\n  elements: {\n    line: {\n      fill: false,\n    },\n    point: {\n      pointStyle: 'rectRounded',\n    },\n  },\n  tooltips: {\n    intersect: false,\n    mode: 'nearest',\n    position: 'average',\n    displayColors: false,\n    borderWidth: 0,\n    titleSpacing: 4,\n    titleMarginBottom: 8,\n    bodySpacing: 5,\n    cornerRadius: 3,\n    xPadding: 6,\n    yPadding: 6,\n    caretSize: 0,\n  },\n  legend: {\n    display: true,\n    position: 'bottom',\n    labels: {\n      padding: 15,\n      usePointStyle: true,\n    },\n  },\n  hover: {\n    intersect: false,\n  },\n  layout: {\n    padding: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 20,\n    },\n  },\n});\n\nconst formatNumber = (number) =>\n  'Intl' in window ? new Intl.NumberFormat('en-IN').format(number) : number;\n\nconst defaultOptions = {\n  responsive: true,\n  events: [\n    'click',\n    'mousemove',\n    'mouseout',\n    'touchstart',\n    'touchmove',\n    'touchend',\n  ],\n  maintainAspectRatio: false,\n  tooltips: {\n    backgroundColor: 'rgba(20,20,20,0.9)',\n    titleFontColor: 'rgba(255,255,255, 0.9)',\n    bodyFontColor: 'rgba(255,255,255, 0.9)',\n    caretSize: 0,\n    borderWidth: 0,\n    mode: 'index',\n    callbacks: {\n      label: function (tooltipItem, data) {\n        let label = data.datasets[tooltipItem.datasetIndex].label || '';\n        if (label) {\n          label += ': ';\n        }\n        label += formatNumber(Math.round(tooltipItem.yLabel * 100) / 100);\n        return label;\n      },\n    },\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n    line: {\n      tension: 0.1,\n    },\n  },\n};\n\nconst yAxisDefaults = {\n  type: 'linear',\n  ticks: {\n    beginAtZero: true,\n    max: undefined,\n    precision: 0,\n    callback: (value) => formatNumber(value),\n  },\n  gridLines: {\n    color: 'rgba(0, 0, 0, 0.07)',\n    drawBorder: false,\n    tickMarkLength: 6,\n  },\n};\n\nconst xAxisDefaults = {\n  gridLines: {\n    color: 'rgba(0, 0, 0, 0)',\n  },\n};\n\nexport {defaultOptions, formatNumber, yAxisDefaults, xAxisDefaults};\n","import {defaultOptions, xAxisDefaults, formatNumber} from './chart-defaults';\n\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport {Bar} from 'react-chartjs-2';\n\nfunction AgeChart(props) {\n  const ages = Array(10).fill(0);\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.agebracket) {\n      const age = parseInt(patient.agebracket);\n      for (let i = 0; i < 10; i++) {\n        if (age > i * 10 && age <= (i + 1) * 10) {\n          ages[i]++;\n        }\n      }\n    }\n  });\n\n  const chartData = {\n    labels: [\n      '0-10',\n      '11-20',\n      '21-30',\n      '31-40',\n      '41-50',\n      '51-60',\n      '61-70',\n      '71-80',\n      '81-90',\n      '91-100',\n    ],\n    datasets: [\n      {\n        data: ages,\n        label: 'Cases',\n        backgroundColor: '#bc79c9',\n      },\n    ],\n  };\n\n  const chartOptions = deepmerge(defaultOptions, {\n    legend: {\n      display: false,\n    },\n    scales: {\n      xAxes: [\n        deepmerge(xAxisDefaults, {\n          stacked: true,\n        }),\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n  });\n\n  const sampleSize = ages.reduce((a, b) => a + b, 0);\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Bar data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">\n        Sample Size: {formatNumber(sampleSize)} patients\n      </div>\n    </div>\n  );\n}\n\nexport default AgeChart;\n","export const MAP_TYPES = {\n  COUNTRY: 'country',\n  STATE: 'state',\n};\n\nconst PUBLIC_URL = process.env.PUBLIC_URL;\n\nexport const MAPS_DIR = `${PUBLIC_URL}/maps`;\n\nexport const MAP_META = {\n  India: {\n    name: 'India',\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectName: 'india',\n  },\n  'Andaman and Nicobar Islands': {\n    name: 'Andaman and Nicobar Islands',\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andamannicobarislands_district',\n  },\n  'Arunachal Pradesh': {\n    name: 'Arunachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'arunachalpradesh_district',\n  },\n  'Andhra Pradesh': {\n    name: 'Andhra Pradesh',\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andhrapradesh_district',\n  },\n\n  Assam: {\n    name: 'Assam',\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'assam_district',\n  },\n  Bihar: {\n    name: 'Bihar',\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'bihar_district',\n  },\n  Chandigarh: {\n    name: 'Chandigarh',\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chandigarh_district',\n  },\n  Chhattisgarh: {\n    name: 'Chhattisgarh',\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chhattisgarh_district',\n  },\n  'Dadra and Nagar Haveli': {\n    name: 'Dadra and Nagar Haveli',\n    geoDataFile: `${MAPS_DIR}/dadranagarhaveli.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'dadranagarhaveli_district',\n  },\n  Delhi: {\n    name: 'Delhi',\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'delhi_district',\n  },\n  Karnataka: {\n    name: 'Karnataka',\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'karnataka_district',\n  },\n  Kerala: {\n    name: 'Kerala',\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kerala_district',\n  },\n  Goa: {\n    name: 'Goa',\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'goa_district',\n  },\n  Gujarat: {\n    name: 'Gujarat',\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'gujarat_district',\n  },\n  Haryana: {\n    name: 'Haryana',\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'haryana_district',\n  },\n  'Himachal Pradesh': {\n    name: 'Himachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'himachalpradesh_district',\n  },\n  'Jammu and Kashmir': {\n    name: 'Jammu and Kashmir',\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jammukashmir_district',\n  },\n  Jharkhand: {\n    name: 'Jharkhand',\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jharkhand_district',\n  },\n  Ladakh: {\n    name: 'Ladakh',\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'ladakh_district',\n  },\n  Lakshadweep: {\n    name: 'Lakshadweep',\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'lakshadweep_district',\n  },\n  'Madhya Pradesh': {\n    name: 'Madhya Pradesh',\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'madhyapradesh_district',\n  },\n  Maharashtra: {\n    name: 'Maharashtra',\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'maharashtra_district',\n  },\n  Manipur: {\n    name: 'Manipur',\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'manipur_district',\n  },\n  Meghalaya: {\n    name: 'Meghalaya',\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'meghalaya_district',\n  },\n  Mizoram: {\n    name: 'Mizoram',\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'mizoram_district',\n  },\n  Nagaland: {\n    name: 'Nagaland',\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'nagaland_district',\n  },\n  Odisha: {\n    name: 'Odisha',\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'odisha_district',\n  },\n  Puducherry: {\n    name: 'Puducherry',\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'puducherry_district',\n  },\n  Punjab: {\n    name: 'Punjab',\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'punjab_district',\n  },\n  Rajasthan: {\n    name: 'Rajasthan',\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'rajasthan_district',\n  },\n  Sikkim: {\n    name: 'Sikkim',\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'sikkim_district',\n  },\n  'Tamil Nadu': {\n    name: 'Tamil Nadu',\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tamilnadu_district',\n  },\n  Telangana: {\n    name: 'Telangana',\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'telangana_district',\n  },\n  Tripura: {\n    name: 'Tripura',\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tripura_district',\n  },\n  Uttarakhand: {\n    name: 'Uttarakhand',\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarakhand_district',\n  },\n  'Uttar Pradesh': {\n    name: 'Uttar Pradesh',\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarpradesh_district',\n  },\n\n  'West Bengal': {\n    name: 'West Bengal',\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'westbengal_district',\n  },\n};\n\nexport const STATE_CODES = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DN: 'Dadra and Nagar Haveli',\n  DD: 'Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n};\n\nconst reverseStateCodes = {};\nObject.keys(STATE_CODES).map((key, index) => {\n  reverseStateCodes[STATE_CODES[key]] = key;\n  return null;\n});\nexport const STATE_CODES_REVERSE = reverseStateCodes;\n\nconst stateCodes = [];\nObject.keys(STATE_CODES).map((key, index) => {\n  stateCodes.push({code: key, name: STATE_CODES[key]});\n  return null;\n});\nexport const STATE_CODES_ARRAY = stateCodes;\n\nexport const DISTRICTS_ARRAY = [\n  {\n    district: 'Nicobars',\n    othernamesspellings: '',\n    state: 'Andaman and Nicobar Islands',\n  },\n  {\n    district: 'North and Middle Andaman',\n    othernamesspellings: '',\n    state: 'Andaman and Nicobar Islands',\n  },\n  {\n    district: 'South Andaman',\n    othernamesspellings: '',\n    state: 'Andaman and Nicobar Islands',\n  },\n  {\n    district: 'Anantapur',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Chittoor',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'East Godavari',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Guntur',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Krishna',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Kurnool',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Prakasam',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'S.P.S. Nellore',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Srikakulam',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Visakhapatnam',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Vizianagaram',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'West Godavari',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Y.S.R.',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Anjaw',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Changlang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'East Kameng',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'East Siang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Kamle',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Kra Daadi',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Kurung Kumey',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Lepa Rada',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Lohit',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Longding',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Lower Dibang Valley',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Lower Siang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Lower Subansiri',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Namsai',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Pakke Kessang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Papum Pare',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Shi Yomi',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Siang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Tawang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Tirap',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Upper Dibang Valley',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Upper Siang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Upper Subansiri',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'West Kameng',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'West Siang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Baksa',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Barpeta',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Biswanath',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Bongaigaon',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Cachar',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Charaideo',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Chirang',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Darrang',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Dhemaji',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Dhubri',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Dibrugarh',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Dima Hasao',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Goalpara',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Golaghat',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Hailakandi',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Hojai',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Jorhat',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Kamrup',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Kamrup Metropolitan',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Karbi Anglong',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Karimganj',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Kokrajhar',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Lakhimpur',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Majuli',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Morigaon',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Nagaon',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Nalbari',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Sivasagar',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Sonitpur',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'South Salmara Mancachar',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Tinsukia',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Udalguri',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'West Karbi Anglong',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Araria',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Arwal',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Aurangabad',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Banka',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Begusarai',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Bhagalpur',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Bhojpur',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Buxar',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Darbhanga',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Gaya',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Gopalganj',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Jamui',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Jehanabad',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Kaimur Bhabua',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Katihar',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Khagaria',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Kishanganj',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Lakhisarai',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Madhepura',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Madhubani',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Munger',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Muzaffarpur',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Nalanda',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Nawada',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'West Champaran',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Patna',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'East Champaran',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Purnia',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Rohtas',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Saharsa',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Samastipur',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Saran',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Sheikhpura',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Sheohar',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Sitamarhi',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Siwan',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Supaul',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Vaishali',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Chandigarh',\n    othernamesspellings: '',\n    state: 'Chandigarh',\n  },\n  {\n    district: 'Balod',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Baloda Bazar',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Balrampur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Bametara',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Bastar',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Bijapur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Bilaspur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Dakshin Bastar Dantewada',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Dhamtari',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Durg',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Gariaband',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Janjgir Champa',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Jashpur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Kabeerdham',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Kondagaon',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Korba',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Koriya',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Mahasamund',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Mungeli',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Narayanpur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Raigarh',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Raipur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Rajnandgaon',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Sukma',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Surajpur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Surguja',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Uttar Bastar Kanker',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Dadra and Nagar Haveli',\n    othernamesspellings: '',\n    state: 'Dadra and Nagar Haveli',\n  },\n  {\n    district: 'Daman',\n    othernamesspellings: '',\n    state: 'Daman And Diu',\n  },\n  {\n    district: 'Diu',\n    othernamesspellings: '',\n    state: 'Daman And Diu',\n  },\n  {\n    district: 'Central Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'East Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'New Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'North Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'North East Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'North West Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'Shahdara',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'South Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'South East Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'South West Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'West Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'North Goa',\n    othernamesspellings: '',\n    state: 'Goa',\n  },\n  {\n    district: 'South Goa',\n    othernamesspellings: '',\n    state: 'Goa',\n  },\n  {\n    district: 'Ahmadabad',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Amreli',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Anand',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Aravalli',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Banas Kantha',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Bharuch',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Bhavnagar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Botad',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Chota Udaipur',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Devbhumi Dwarka',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Dohad',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Gandhinagar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Gir Somnath',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Jamnagar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Junagadh',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Kachchh',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Kheda',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Mahesana',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Mahisagar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Morbi',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Narmada',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Navsari',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Panch Mahals',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Patan',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Porbandar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Rajkot',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Sabar Kantha',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Surat',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Surendranagar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Tapi',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'The Dangs',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Vadodara',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Valsad',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Ambala',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Bhiwani',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Charki Dadri',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Faridabad',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Fatehabad',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Gurugram',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Hisar',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Jhajjar',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Jind',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Kaithal',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Karnal',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Kurukshetra',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Mahendragarh',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Nuh',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Palwal',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Panchkula',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Panipat',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Rewari',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Rohtak',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Sirsa',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Sonipat',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Yamunanagar',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Bilaspur',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Chamba',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Hamirpur',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Kangra',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Kinnaur',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Kullu',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Lahul and Spiti',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Mandi',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Shimla',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Sirmaur',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Solan',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Una',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Anantnag',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Badgam',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Bandipore',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Baramula',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Doda',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Ganderbal',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Jammu',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Kathua',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Kishtwar',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Kulgam',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Kupwara',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Mirpur',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Muzaffarabad',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Pulwama',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Punch',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Rajouri',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Ramban',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Reasi',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Samba',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Shupiyan',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Srinagar',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Udhampur',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Bokaro',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Chatra',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Deoghar',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Dhanbad',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Dumka',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Garhwa',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Giridih',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Godda',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Gumla',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Hazaribagh',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Jamtara',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Khunti',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Kodarma',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Latehar',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Lohardaga',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Pakur',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Palamu',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Pashchimi Singhbhum',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Purbi Singhbhum',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Ramgarh',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Ranchi',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Sahibganj',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Saraikela-Kharsawan',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Simdega',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Bagalkote',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Ballari',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Belagavi',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Bengaluru',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Bengaluru Rural',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Bidar',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Chamarajanagara',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Chikkaballapura',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Chikkamagaluru',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Chitradurga',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Dakshina Kannada',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Davanagere',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Dharwad',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Gadag',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Hassan',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Haveri',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Kalaburagi',\n    othernamesspellings: 'Gulbarga',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Kodagu',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Kolar',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Koppal',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Mandya',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Mysuru',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Raichur',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Ramanagara',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Shivamogga',\n    othernamesspellings: 'Shimoga',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Tumakuru',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Udupi',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Uttara Kannada',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Vijayapura',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Yadgir',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Alappuzha',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Ernakulam',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Idukki',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kannur',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kasaragod',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kollam',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kottayam',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kozhikode',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Malappuram',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Palakkad',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Pathanamthitta',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Thiruvananthapuram',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Thrissur',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Wayanad',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kargil',\n    othernamesspellings: '',\n    state: 'Ladakh',\n  },\n  {\n    district: 'Leh',\n    othernamesspellings: '',\n    state: 'Ladakh',\n  },\n  {\n    district: 'Lakshadweep',\n    othernamesspellings: '',\n    state: 'Lakshadweep',\n  },\n  {\n    district: 'Agar Malwa',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Alirajpur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Anuppur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Ashoknagar',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Balaghat',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Barwani',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Betul',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Bhind',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Bhopal',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Burhanpur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Chhatarpur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Chhindwara',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Damoh',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Datia',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Dewas',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Dhar',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Dindori',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Khandwa',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Guna',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Gwalior',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Harda',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Hoshangabad',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Indore',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Jabalpur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Jhabua',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Katni',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Mandla',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Mandsaur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Morena',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Narsimhapur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Neemuch',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Niwari',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Panna',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Raisen',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Rajgarh',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Ratlam',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Rewa',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Sagar',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Satna',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Sehore',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Seoni',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Shahdol',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Shajapur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Sheopur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Shivpuri',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Sidhi',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Singrauli',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Tikamgarh',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Ujjain',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Umaria',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Vidisha',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Khargone',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Ahmadnagar',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Akola',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Amravati',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Aurangabad',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Bhandara',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Bid',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Buldana',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Chandrapur',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Dhule',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Gadchiroli',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Gondiya',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Hingoli',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Jalgaon',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Jalna',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Kolhapur',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Latur',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Mumbai',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Mumbai Suburban',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Nagpur',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Nanded',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Nandurbar',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Nashik',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Osmanabad',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Palghar',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Parbhani',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Pune',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Raigarh',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Ratnagiri',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Sangli',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Satara',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Sindhudurg',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Solapur',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Thane',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Wardha',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Washim',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Yavatmal',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Bishnupur',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Chandel',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Churachandpur',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Imphal East',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Imphal West',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Jiribam',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Kakching',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Kamjong',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Kangpokpi',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Noney',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Pherzawl',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Senapati',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Tamenglong',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Tengnoupal',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Thoubal',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Ukhrul',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'East Garo Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'East Jaintia Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'East Khasi Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'North Garo Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'Ribhoi',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'South Garo Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'South West Garo Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'South West Khasi Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'West Garo Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'West Jaintia Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'West Khasi Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'Aizawl',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Champhai',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Kolasib',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Lawngtlai',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Lunglei',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Mamit',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Saiha',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Serchhip',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Dimapur',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Kiphire',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Kohima',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Longleng',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Mokokchung',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Mon',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Peren',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Phek',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Tuensang',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Wokha',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Zunheboto',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Anugul',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Balangir',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Baleshwar',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Bargarh',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Baudh',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Bhadrak',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Cuttack',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Debagarh',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Dhenkanal',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Gajapati',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Ganjam',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Jagatsinghapur',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Jajapur',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Jharsuguda',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Kalahandi',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Kandhamal',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Kendrapara',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Kendujhar',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Khordha',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Koraput',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Malkangiri',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Mayurbhanj',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Nabarangapur',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Nayagarh',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Nuapada',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Puri',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Rayagada',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Sambalpur',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Subarnapur',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Sundargarh',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Karaikal',\n    othernamesspellings: '',\n    state: 'Puducherry',\n  },\n  {\n    district: 'Mahe',\n    othernamesspellings: '',\n    state: 'Puducherry',\n  },\n  {\n    district: 'Puducherry',\n    othernamesspellings: '',\n    state: 'Puducherry',\n  },\n  {\n    district: 'Yanam',\n    othernamesspellings: '',\n    state: 'Puducherry',\n  },\n  {\n    district: 'Amritsar',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Barnala',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Bathinda',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Faridkot',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Fatehgarh Sahib',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Fazilka',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Firozpur',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Gurdaspur',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Hoshiarpur',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Jalandhar',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Kapurthala',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Ludhiana',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Mansa',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Moga',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Pathankot',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Patiala',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Rupnagar',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'S.A.S. Nagar',\n    othernamesspellings: 'Mohali',\n    state: 'Punjab',\n  },\n  {\n    district: 'Sangrur',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Shahid Bhagat Singh Nagar',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Sri Muktsar Sahib',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Tarn Taran',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Ajmer',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Alwar',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Banswara',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Baran',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Barmer',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Bharatpur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Bhilwara',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Bikaner',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Bundi',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Chittaurgarh',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Churu',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Dausa',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Dhaulpur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Dungarpur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Ganganagar',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Hanumangarh',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jaipur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jaisalmer',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jalore',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jhalawar',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jhunjhunu',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jodhpur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Karauli',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Kota',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Nagaur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Pali',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Pratapgarh',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Rajsamand',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Sawai Madhopur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Sikar',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Sirohi',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Tonk',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Udaipur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'East District',\n    othernamesspellings: '',\n    state: 'Sikkim',\n  },\n  {\n    district: 'North District',\n    othernamesspellings: '',\n    state: 'Sikkim',\n  },\n  {\n    district: 'South District',\n    othernamesspellings: '',\n    state: 'Sikkim',\n  },\n  {\n    district: 'West District',\n    othernamesspellings: '',\n    state: 'Sikkim',\n  },\n  {\n    district: 'Ariyalur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Chennai',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Coimbatore',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Cuddalore',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Dharmapuri',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Dindigul',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Erode',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Kancheepuram',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Kanniyakumari',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Karur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Krishnagiri',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Madurai',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Nagapattinam',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Namakkal',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Perambalur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Pudukkottai',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Ramanathapuram',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Salem',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Sivaganga',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Thanjavur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'The Nilgiris',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Theni',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Thiruvallur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Thiruvarur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Thoothukkudi',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Tiruchirappalli',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Tirunelveli',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Tiruppur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Tiruvannamalai',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Vellore',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Viluppuram',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Virudhunagar',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Adilabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Bhadradri Kothagudem',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Hyderabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Jagitial',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Jangoan',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Jayashankar',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Jogulamba Gadwal',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Kamareddy',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Karimnagar',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Khammam',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Kumuram Bheem Asifabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Mahabubabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Mahabubnagar',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Mancherial',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Medak',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Medchal Malkajgiri',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Mulugu',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Nagarkurnool',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Nalgonda',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Narayanpet',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Nirmal',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Nizamabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Peddapalli',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Rajanna Sircilla',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Ranga Reddy',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Sangareddy',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Siddipet',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Suryapet',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Vikarabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Wanaparthy',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Warangal Rural',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Warangal Urban',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Yadadri Bhuvanagiri',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Dhalai',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'Gomati',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'Khowai',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'North Tripura',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'Sipahijala',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'South Tripura',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'Unokoti',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'West Tripura',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'Agra',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Aligarh',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Ambedkar Nagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Amethi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Amroha',\n    othernamesspellings: 'Jyotiba Phule Nagar',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Auraiya',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Azamgarh',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Baghpat',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bahraich',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Ballia',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Balrampur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Banda',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bara Banki',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bareilly',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Basti',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bhadohi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bijnor',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Budaun',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bulandshahr',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Chandauli',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Chitrakoot',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Deoria',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Etah',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Etawah',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Faizabad',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Farrukhabad',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Fatehpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Firozabad',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Gautam Buddha Nagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Ghaziabad',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Ghazipur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Gonda',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Gorakhpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Hamirpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Hapur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Hardoi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Hathras',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Jalaun',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Jaunpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Jhansi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kannauj',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kanpur Dehat',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kanpur Nagar',\n    othernamesspellings: 'Kanpur city',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kasganj',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kaushambi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kheri',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kushinagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Lalitpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Lucknow',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mahoba',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mahrajganj',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mainpuri',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mathura',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mau',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Meerut',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mirzapur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Moradabad',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Muzaffarnagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Pilibhit',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Pratapgarh',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Prayagraj',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Rae Bareli',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Rampur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Saharanpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Sambhal',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Sant Kabir Nagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Shahjahanpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Shamli',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Shrawasti',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Siddharthnagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Sitapur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Sonbhadra',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Sultanpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Unnao',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Varanasi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Almora',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Bageshwar',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Chamoli',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Champawat',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Dehradun',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Haridwar',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Nainital',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Pauri Garhwal',\n    othernamesspellings: 'Pauri or just Garhwal',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Pithoragarh',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Rudraprayag',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Tehri Garhwal',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Udham Singh Nagar',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Uttarkashi',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Alipurduar',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Bankura',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Birbhum',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Cooch Behar',\n    othernamesspellings: 'Coochbehar',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Dakshin Dinajpur',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Darjeeling',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Hooghly',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Howrah',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Jalpaiguri',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Jhargram',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Kalimpong',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Kolkata',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Maldah',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Medinipur West',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Murshidabad',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Nadia',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'North 24 Parganas',\n    othernamesspellings: '24 paraganas north\\r',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Paschim Bardhaman',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Purba Bardhaman',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Medinipur East',\n    othernamesspellings: 'Purba Medinipur',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Purulia',\n    othernamesspellings: 'puruliya',\n    state: 'West Bengal',\n  },\n  {\n    district: 'South 24 Parganas',\n    othernamesspellings: '24 south parganas',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Uttar Dinajpur',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: '',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: '',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: '',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Tenkasi',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Chengalpattu',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Ranipet',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Kallakurichi',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Tirupathur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n];\n","import {STATE_CODES} from '../constants';\n\nimport moment from 'moment';\n\nconst months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec',\n};\n\nexport const getStateName = (code) => {\n  return STATE_CODES[code.toUpperCase()];\n};\n\nexport const formatDate = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+05:30`;\n};\n\nexport const formatDateAbsolute = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const time = unformattedDate.slice(11);\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\n};\n\nconst validateCTS = (data = []) => {\n  const dataTypes = [\n    'dailyconfirmed',\n    'dailydeceased',\n    'dailyrecovered',\n    'totalconfirmed',\n    'totaldeceased',\n    'totalrecovered',\n  ];\n  return data\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\n    .filter((d) => {\n      // Skip data from the current day\n      const today = moment().utcOffset('+05:30');\n      return moment(d.date, 'DD MMMM')\n        .utcOffset('+05:30')\n        .isBefore(today, 'day');\n    });\n};\n\nexport const preprocessTimeseries = (timeseries) => {\n  return validateCTS(timeseries).map((stat, index) => ({\n    date: new Date(stat.date + ' 2020'),\n    totalconfirmed: +stat.totalconfirmed,\n    totalrecovered: +stat.totalrecovered,\n    totaldeceased: +stat.totaldeceased,\n    dailyconfirmed: +stat.dailyconfirmed,\n    dailyrecovered: +stat.dailyrecovered,\n    dailydeceased: +stat.dailydeceased,\n    // Active = Confimed - Recovered - Deceased\n    totalactive:\n      +stat.totalconfirmed - +stat.totalrecovered - +stat.totaldeceased,\n    dailyactive:\n      +stat.dailyconfirmed - +stat.dailyrecovered - +stat.dailydeceased,\n  }));\n};\n\n/**\n * Returns the last `days` entries\n * @param {Array<Object>} timeseries\n * @param {number} days\n *\n * @return {Array<Object>}\n */\nexport function sliceTimeseriesFromEnd(timeseries, days) {\n  return timeseries.slice(-days);\n}\n\nexport const formatNumber = (value) => {\n  const numberFormatter = new Intl.NumberFormat('en-IN');\n  return isNaN(value) ? '-' : numberFormatter.format(value);\n};\n\nexport const parseStateTimeseries = ({states_daily: data}) => {\n  const statewiseSeries = Object.keys(STATE_CODES).reduce((a, c) => {\n    a[c] = [];\n    return a;\n  }, {});\n\n  const today = moment().utcOffset('+05:30');\n  for (let i = 0; i < data.length; i += 3) {\n    const date = moment(data[i].date, 'DD-MMM-YY').utcOffset('+05:30');\n    // Skip data from the current day\n    if (date.isBefore(today, 'day')) {\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\n        const stateCode = k.toLowerCase();\n        const prev = v[v.length - 1] || {};\n        // Parser\n        const dailyconfirmed = +data[i][stateCode] || 0;\n        const dailyrecovered = +data[i + 1][stateCode] || 0;\n        const dailydeceased = +data[i + 2][stateCode] || 0;\n        const totalconfirmed = +data[i][stateCode] + (prev.totalconfirmed || 0);\n        const totalrecovered =\n          +data[i + 1][stateCode] + (prev.totalrecovered || 0);\n        const totaldeceased =\n          +data[i + 2][stateCode] + (prev.totaldeceased || 0);\n        // Push\n        v.push({\n          date: date.toDate(),\n          dailyconfirmed: dailyconfirmed,\n          dailyrecovered: dailyrecovered,\n          dailydeceased: dailydeceased,\n          totalconfirmed: totalconfirmed,\n          totalrecovered: totalrecovered,\n          totaldeceased: totaldeceased,\n          // Active = Confimed - Recovered - Deceased\n          totalactive: totalconfirmed - totalrecovered - totaldeceased,\n          dailyactive: dailyconfirmed - dailyrecovered - dailydeceased,\n        });\n      });\n    }\n  }\n\n  return statewiseSeries;\n};\n","import {defaultOptions, xAxisDefaults, yAxisDefaults} from './chart-defaults';\n\nimport {getStateName} from '../../utils/commonfunctions';\n\nimport deepmerge from 'deepmerge';\nimport moment from 'moment';\nimport React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nfunction AllStatesChart(props) {\n  const dates = [];\n  const chartReference = React.createRef();\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const statesData = new Map();\n\n  props.data.forEach((data) => {\n    if (data.status !== 'Confirmed') {\n      return;\n    }\n\n    Object.keys(data).forEach((key) => {\n      if (key === 'date') {\n        dates.push(moment(data.date.trim(), 'DD MMM').utcOffset('+05:30'));\n      }\n\n      if (key === 'status' || key === 'date') {\n        return;\n      }\n\n      if (!statesData.has(key)) {\n        statesData.set(key, []);\n      }\n      const previousValue =\n        statesData.get(key).length > 0\n          ? parseInt(statesData.get(key)[statesData.get(key).length - 1])\n          : 0;\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\n      statesData.get(key).push(previousValue + currentValue);\n    });\n  });\n\n  const sortedMap = new Map(\n    [...statesData.entries()].sort((a, b) => {\n      return a[1][a[1].length - 1] < b[1][b[1].length - 1] ? 1 : -1;\n    })\n  );\n\n  const colors = [\n    '#718af0',\n    '#7dd6fa',\n    '#59b3aa',\n    '#9bc26b',\n    '#e5d22f',\n    '#ffb041',\n    '#ff8a66',\n    '#db6b8f',\n    '#bd66cc',\n    '#8e8e8e',\n  ];\n\n  let index = 0;\n  const datasets = [];\n  sortedMap.forEach((data, key) => {\n    if (key === 'tt') {\n      return;\n    }\n\n    if (index >= 10) {\n      return;\n    }\n\n    datasets.push({\n      borderWidth: 2,\n      data: statesData.get(key),\n      borderCapStyle: 'round',\n      pointBackgroundColor: colors[index],\n      label: getStateName(key),\n      borderColor: colors[index],\n      pointHoverRadius: 0.5,\n    });\n\n    index++;\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: datasets,\n  };\n\n  const options = deepmerge(defaultOptions, {\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0,\n      },\n    },\n    legend: {\n      labels: {\n        boxWidth: 20,\n        fontSize: 11,\n      },\n    },\n    scales: {\n      yAxes: [\n        deepmerge(yAxisDefaults, {\n          type: 'linear',\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        }),\n      ],\n      xAxes: [\n        deepmerge(xAxisDefaults, {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        }),\n      ],\n    },\n  });\n\n  function toggleSelection() {\n    // Get reference of chartInstance and update it\n    const ci = chartReference.current.chartInstance;\n    for (let i = 0; i < ci.data.datasets.length; i++) {\n      const meta = ci.getDatasetMeta(i);\n      meta.hidden =\n        meta.hidden === null\n          ? !chartReference.current.chartInstance.data.datasets[i].hidden\n          : null;\n    }\n    ci.update();\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} ref={chartReference} />\n      </div>\n      <div className=\"chart-note\" style={{marginTop: '0px', height: '30px'}}>\n        <button onClick={toggleSelection}>Toggle Selection</button>\n      </div>\n    </div>\n  );\n}\n\nexport default AllStatesChart;\n","import {\n  defaultOptions,\n  xAxisDefaults,\n  yAxisDefaults,\n  formatNumber,\n} from './chart-defaults';\n\nimport deepmerge from 'deepmerge';\nimport moment from 'moment';\nimport React from 'react';\nimport {Bar, defaults} from 'react-chartjs-2';\n\nfunction DailyConfirmedChart(props) {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 31) {\n      dates.push(\n        moment(data.date.trim(), 'DD MMM').utcOffset('+05:30').format('DD MMM')\n      );\n      confirmed.push(data.dailyconfirmed);\n      recovered.push(data.dailyrecovered);\n      deceased.push(data.dailydeceased);\n    }\n  });\n\n  const barDataSet = {\n    labels: dates,\n    datasets: [\n      {\n        data: recovered,\n        label: 'Recovered',\n        backgroundColor: '#7ebf80',\n      },\n      {\n        data: deceased,\n        label: 'Deceased',\n        backgroundColor: '#6c757d',\n      },\n      {\n        data: confirmed,\n        label: 'Confirmed',\n        backgroundColor: '#ff6862',\n      },\n    ],\n  };\n\n  const options = deepmerge(defaultOptions, {\n    tooltips: {\n      mode: 'index',\n    },\n    legend: {\n      display: true,\n      reverse: true,\n      labels: {\n        usePointStyle: true, // Required to change pointstyle to 'rectRounded' from 'circle'\n        generateLabels: (chart) => {\n          const labels = defaults.global.legend.labels.generateLabels(chart);\n          labels.forEach((label) => {\n            label.pointStyle = 'rectRounded';\n          });\n          return labels;\n        },\n      },\n    },\n    scales: {\n      xAxes: [\n        deepmerge(xAxisDefaults, {\n          stacked: true,\n        }),\n      ],\n      yAxes: [\n        deepmerge(yAxisDefaults, {\n          stacked: true,\n          ticks: {\n            callback: (value) => formatNumber(value),\n          },\n        }),\n      ],\n    },\n  });\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Bar data={barDataSet} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default DailyConfirmedChart;\n","import {defaultOptions, formatNumber} from './chart-defaults';\n\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport {Doughnut} from 'react-chartjs-2';\n\nfunction GenderChart(props) {\n  let male = 0;\n  let female = 0;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.gender === 'M') {\n      male++;\n    } else if (patient.gender === 'F') {\n      female++;\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: [male, female],\n        backgroundColor: ['#6497f3', '#ea6e9a'],\n        label: 'Hola',\n      },\n    ],\n    labels: ['Male', 'Female'],\n  };\n\n  const chartOptions = deepmerge(defaultOptions, {\n    tooltips: {\n      mode: 'point',\n      position: 'nearest',\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return formatNumber(currentValue) + ' (' + percentage + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  });\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">\n        Sample size: {formatNumber(male + female)} patients\n      </div>\n    </div>\n  );\n}\n\nexport default GenderChart;\n","import {getStateName} from '../../utils/commonfunctions';\n\nimport moment from 'moment';\nimport React from 'react';\nimport {Line, defaults} from 'react-chartjs-2';\nfunction GrowthTrendChart(props) {\n  const dates = [];\n\n  defaults.global.elements.line.fill = false;\n\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const statesData = new Map();\n  const statesDailyData = new Map();\n\n  props.data.forEach((data, index) => {\n    if (data.status !== 'Confirmed') {\n      return;\n    }\n\n    Object.keys(data).forEach((key) => {\n      if (key === 'date') {\n        dates.push(moment(data.date.trim(), 'DD MMM').utcOffset('+05:30'));\n      }\n\n      if (key === 'status' || key === 'date') {\n        return;\n      }\n\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\n\n      if (currentValue === 0 && !statesData.has(key)) {\n        return;\n      }\n\n      if (!statesData.has(key)) {\n        statesData.set(key, []);\n        statesDailyData.set(key, []);\n      }\n      const previousValue =\n        statesData.get(key).length > 0\n          ? parseInt(statesData.get(key)[statesData.get(key).length - 1].x)\n          : 0;\n\n      const stateData = statesDailyData.get(key);\n      let weekSum = 0;\n      for (let i = 1; i <= 7; ++i) {\n        const idx = stateData.length - i;\n        if (idx >= 0) {\n          weekSum += stateData[idx];\n        }\n      }\n      statesData.get(key).push({x: previousValue + currentValue, y: weekSum});\n      statesDailyData.get(key).push(currentValue);\n    });\n  });\n\n  const sortedMap = new Map(\n    [...statesData.entries()].sort((a, b) => {\n      return a[1][a[1].length - 1].x < b[1][b[1].length - 1].x ? 1 : -1;\n    })\n  );\n\n  const colors = [\n    '#ff073a',\n    '#28a745',\n    '#342ead',\n    '#7D5BA6',\n    '#DD7596',\n    '#16c8f0',\n    '#f67575',\n    '#2b580c',\n    '#9D44B5',\n    '#91132d',\n    '#6D9DC5',\n    '#2b580c',\n    '#6c757d',\n    '#f67575',\n    '#d4f8e8',\n  ];\n\n  let index = 0;\n  const datasets = [];\n  sortedMap.forEach((data, key) => {\n    if (key === 'tt') {\n      return;\n    }\n\n    if (index >= 10) {\n      return;\n    }\n\n    datasets.push({\n      data: statesData.get(key),\n      label: getStateName(key),\n      order: index,\n      borderWidth: 1.0,\n      borderCapStyle: 'round',\n      borderColor: colors[index],\n      pointBackgroundColor: colors[index],\n      pointHoverRadius: 1.0,\n    });\n\n    index++;\n  });\n\n  const dataset = {\n    datasets: datasets,\n  };\n\n  const options = {\n    responsive: true,\n    events: ['click', 'mousemove', 'mouseout', 'touchstart', 'touchmove'],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        cubicInterpolationMode: 'monotone',\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          type: 'logarithmic',\n          ticks: {\n            beginAtZero: true,\n            min: 1,\n            max: 2000,\n            precision: 0,\n            callback: function (value, index, values) {\n              return Number(value.toString());\n            },\n          },\n          scaleLabel: {\n            display: true,\n            labelString: 'New Cases (since last 7 days)',\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          type: 'logarithmic',\n          ticks: {\n            beginAtZero: true,\n            min: 0,\n            max: 2000,\n            precision: 0,\n            callback: function (value, index, values) {\n              return Number(value.toString());\n            },\n          },\n          scaleLabel: {\n            display: true,\n            labelString: 'Total Cases',\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default GrowthTrendChart;\n","import {formatNumber} from './chart-defaults';\n\nimport React from 'react';\nimport {Doughnut} from 'react-chartjs-2';\n\nfunction NationalityChart(props) {\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const nationality = {};\n\n  props.data.forEach((patient) => {\n    if (!patient.nationality) {\n      return;\n    }\n    if (!nationality.hasOwnProperty(patient.nationality.toLowerCase())) {\n      nationality[patient.nationality.toLowerCase()] = 0;\n    }\n    nationality[patient.nationality.toLowerCase()]++;\n  });\n\n  // delete nationality.india;\n  const data = [];\n  const labels = [];\n\n  Object.keys(nationality).forEach((country) => {\n    if (country) {\n      labels.push(country.toUpperCase());\n      data.push(nationality[country]);\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: data,\n        backgroundColor: [\n          '#ff8a66',\n          '#718af0',\n          '#7dd6fa',\n          '#59b3aa',\n          '#9bc26b',\n          '#e5d22f',\n          '#ffb041',\n          '#db6b8f',\n          '#bd66cc',\n          '#8e8e8e',\n        ],\n      },\n    ],\n    labels: labels,\n  };\n\n  const chartOptions = {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    legend: {\n      display: false,\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'point',\n      events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return currentValue + ' (' + percentage + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  };\n\n  const sampleSize = data.reduce((a, b) => a + b, 0);\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">\n        Sample size: {formatNumber(sampleSize)} patients\n      </div>\n    </div>\n  );\n}\n\nexport default NationalityChart;\n","import {defaultOptions, xAxisDefaults, yAxisDefaults} from './chart-defaults';\n\nimport deepmerge from 'deepmerge';\nimport moment from 'moment';\nimport React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nfunction TotalConfirmedChart(props) {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 31) {\n      dates.push(moment(data.date.trim(), 'DD MMM').utcOffset('+05:30'));\n      confirmed.push(data.totalconfirmed);\n      recovered.push(data.totalrecovered);\n      deceased.push(data.totaldeceased);\n    }\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: [\n      {\n        borderWidth: 2,\n        data: confirmed,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#ff6862',\n        label: 'Confirmed',\n        borderColor: '#ff6862',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: recovered,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#7ebf80',\n        label: 'Recovered',\n        borderColor: '#7ebf80',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: deceased,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#6c757d',\n        label: 'Deceased',\n        borderColor: '#6c757d',\n        pointHoverRadius: 2,\n      },\n    ],\n  };\n\n  const options = deepmerge(defaultOptions, {\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0.1,\n      },\n    },\n    scales: {\n      yAxes: [\n        deepmerge(yAxisDefaults, {\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        }),\n      ],\n      xAxes: [\n        deepmerge(xAxisDefaults, {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n        }),\n      ],\n    },\n  });\n\n  if (props.mode) {\n    options.scales.yAxes = [\n      {\n        type: 'logarithmic',\n        ticks: {\n          min: 0,\n          max: 10000,\n          callback: function (value, index, values) {\n            if (value === 10000) return '10000';\n            if (value === 2000) return '2500';\n            if (value === 500) return '500';\n            if (value === 100) return '100';\n            if (value === 20) return '25';\n            if (value === 5) return '5';\n            if (value === 0) return '0';\n            return null;\n          },\n        },\n        scaleLabel: {\n          display: false,\n          labelString: 'Total Cases',\n        },\n      },\n    ];\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default TotalConfirmedChart;\n","import AgeChart from './Charts/agechart';\nimport AllStatesChart from './Charts/allstates';\nimport DailyConfirmedChart from './Charts/dailyconfirmedchart';\nimport GenderChart from './Charts/genderchart';\nimport GrowthTrendChart from './Charts/growthtrendchart';\nimport NationalityChart from './Charts/nationalitychart';\nimport TotalConfirmedChart from './Charts/totalconfirmedchart';\n\nimport axios from 'axios';\nimport React, {useState, useEffect} from 'react';\n\nfunction DeepDive() {\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState([]);\n  const [rawData, setRawData] = useState([]);\n  const [statesTimeSeries, setStatesTimeSeries] = useState([]);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        response,\n        rawDataResponse,\n        stateDailyResponse,\n      ] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/raw_data.json'),\n        axios.get('https://api.covid19india.org/states_daily.json'),\n      ]);\n      setTimeseries(response.data.cases_time_series);\n      setStatesTimeSeries(stateDailyResponse.data.states_daily);\n      setRawData(rawDataResponse.data.raw_data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"cards-container\">\n      <section className=\"cards\">\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <TotalConfirmedChart title=\"Total Cases\" timeseries={timeseries} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <DailyConfirmedChart title=\"Daily Cases\" timeseries={timeseries} />\n        </div>\n\n        <div\n          className=\"card card-big fadeInUp\"\n          style={{animationDelay: '0.7s'}}\n        >\n          <AllStatesChart\n            title=\"Total Cases by State\"\n            data={statesTimeSeries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <GrowthTrendChart\n            title=\"States - Growth Trend\"\n            data={statesTimeSeries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <GenderChart title=\"Patient Gender\" data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <AgeChart title=\"Patients by Age\" data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <NationalityChart title=\"Patients by  Nationality\" data={rawData} />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default DeepDive;\n","import axios from 'axios';\nimport React, {useState, useEffect} from 'react';\n\nfunction FAQ(props) {\n  const [faq, setFaq] = useState([]);\n\n  useEffect(() => {\n    getFAQs();\n  }, []);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const getFAQs = () => {\n    axios\n      .get('https://api.covid19india.org/website_data.json')\n      .then((response) => {\n        setFaq(response.data['faq']);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div className=\"FAQ\">\n      {faq.map((faq, index) => {\n        return (\n          <div\n            key={index}\n            className=\"faq fadeInUp\"\n            style={{animationDelay: `${0.5 + index * 0.1}s`}}\n          >\n            <h2 className=\"question\">{faq.question}</h2>\n            <h2\n              className=\"answer\"\n              dangerouslySetInnerHTML={{__html: faq.answer}}\n            ></h2>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FAQ;\n","import anime from 'animejs';\nimport React, {useState, useRef} from 'react';\nimport * as Icon from 'react-feather';\nimport {Link} from 'react-router-dom';\nimport {useEffectOnce, useLockBodyScroll} from 'react-use';\n\nconst navLinkProps = (path, animationDelay) => ({\n  className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\n  style: {\n    animationDelay: `${animationDelay}s`,\n  },\n});\n\nconst activeNavIcon = (path) => ({\n  style: {\n    stroke: window.location.pathname === path ? '#4c75f2' : '',\n  },\n});\n\nfunction Navbar({pages, darkMode, setDarkMode}) {\n  const [expand, setExpand] = useState(false);\n  useLockBodyScroll(expand);\n\n  return (\n    <div className=\"Navbar\">\n      <div\n        className=\"navbar-left\"\n        onClick={() => setDarkMode((prevMode) => !prevMode)}\n      >\n        {darkMode ? <Icon.Sun color={'#ffc107'} /> : <Icon.Moon />}\n      </div>\n      <div className=\"navbar-middle\">\n        <Link\n          to=\"/\"\n          onClick={() => {\n            setExpand(false);\n          }}\n        >\n          Covid19<span>Chhattisgarh</span>\n        </Link>\n      </div>\n\n      <div\n        className=\"navbar-right\"\n        onClick={() => {\n          setExpand(!expand);\n        }}\n        onMouseEnter={() => {\n          if (window.innerWidth > 769) {\n            setExpand(true);\n            anime({\n              targets: '.navbar-right path',\n              strokeDashoffset: [anime.setDashoffset, 0],\n              easing: 'easeInOutSine',\n              duration: 250,\n              delay: function (el, i) {\n                return i * 250;\n              },\n              direction: 'alternate',\n              loop: false,\n            });\n          }\n        }}\n      >\n        {window.innerWidth < 769 && <span>{expand ? 'Close' : 'Menu'}</span>}\n        {window.innerWidth > 769 && (\n          <React.Fragment>\n            <span>\n              <Link to=\"/\">\n                <Icon.Home {...activeNavIcon('/')} />\n              </Link>\n            </span>\n            {/* <span>\n              <Link to=\"/demographics\">\n                <Icon.Users {...activeNavIcon('/demographics')} />\n              </Link>\n            </span> */}\n            <span>\n              <Link to=\"/deepdive\">\n                <Icon.BarChart2 {...activeNavIcon('/deepdive')} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/essentials\">\n                <Icon.Package {...activeNavIcon('/essentials')} />\n              </Link>\n            </span>\n            {/* <span>\n              <Link to=\"/faq\">\n                <Icon.HelpCircle {...activeNavIcon('/faq')} />\n              </Link>\n            </span> */}\n          </React.Fragment>\n        )}\n      </div>\n\n      {expand && <Expand expand={expand} pages={pages} setExpand={setExpand} />}\n    </div>\n  );\n}\n\nfunction Expand({expand, pages, setExpand}) {\n  const expandElement = useRef(null);\n\n  useEffectOnce(() => {\n    anime({\n      targets: expandElement.current,\n      translateX: '10rem',\n      easing: 'easeOutExpo',\n      duration: 250,\n    });\n  });\n\n  return (\n    <div\n      className=\"expand\"\n      ref={expandElement}\n      onMouseLeave={() => {\n        setExpand(false);\n      }}\n    >\n      {pages.map((page, i) => {\n        if (page.showInNavbar === true) {\n          return (\n            <Link\n              to={page.pageLink}\n              key={i}\n              onClick={() => {\n                setExpand(false);\n              }}\n            >\n              <span\n                {...navLinkProps(page.pageLink, page.animationDelayForNavbar)}\n              >\n                {page.displayName}\n              </span>\n            </Link>\n          );\n        }\n        return null;\n      })}\n\n      <div className=\"expand-bottom fadeInUp\" style={{animationDelay: '1s'}}>\n        <h5>A crowdsourced initiative.</h5>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport * as Icon from 'react-feather';\n\nfunction DownloadBlock(props) {\n  return (\n    <div className=\"DownloadBlock fadeInUp\" style={{animationDelay: '0.5s'}}>\n      <a\n        className=\"button\"\n        target=\"_noblank\"\n        href=\"https://raw.githubusercontent.com/covid19india/api/gh-pages/raw_data.json\"\n      >\n        <Icon.Download /> <span>JSON</span>\n      </a>\n      <a\n        className=\"button\"\n        target=\"_noblank\"\n        href=\"https://raw.githubusercontent.com/covid19india/api/gh-pages/csv/latest/raw_data.csv\"\n      >\n        <Icon.Download /> <span>CSV</span>\n      </a>\n    </div>\n  );\n}\n\nexport default React.memo(DownloadBlock, () => {\n  return true;\n});\n","import React from 'react';\nimport * as Icon from 'react-feather';\n\nfunction Footer(props) {\n  return (\n    <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n      <h5>We stand with everyone fighting on the frontlines</h5>\n\n      <div className=\"link\">\n        <a\n          href=\"https://github.com/covid19cg\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          covid19cg\n        </a>\n      </div>\n\n      <a\n        href=\"https://github.com/covid19cg/covid19cg\"\n        className=\"button github\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.GitHub />\n        <span>Open Sourced on GitHub</span>\n      </a>\n\n      {/* <a\n        className=\"button excel\"\n        href=\"http://patientdb.covid19india.org\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.Database />\n        <span>Crowdsourced Patient Database&nbsp;</span>\n      </a> */}\n\n      <a\n        href=\"https://twitter.com/CGCoronaUpdate\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"button twitter\"\n        style={{justifyContent: 'center'}}\n      >\n        <Icon.Twitter />\n        <span>View updates on Twitter</span>\n      </a>\n\n      {/* <a\n        href=\"https://bit.ly/covid19crowd\"\n        className=\"button telegram\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.MessageCircle />\n        <span>Join Telegram to Collaborate!</span>\n      </a> */}\n    </footer>\n  );\n}\n\nexport default React.memo(Footer);\n","import {format} from 'date-fns';\nimport React from 'react';\n\nfunction PatientsView({\n  logs,\n  summary,\n  setModal,\n  setPatient,\n  expand,\n  applyClass,\n}) {\n  return (\n    <div className=\"Patients fadeInUp\" style={{animationDelay: '1s'}}>\n      {Object.keys(logs)\n        .slice(summary ? -1 : 0)\n        .map((day, index) => {\n          if (day !== 'Invalid Date') {\n            return (\n              <React.Fragment key={index}>\n                <h5 className=\"daylabel\">\n                  {format(new Date(day), 'dd MMM, yyyy')}{' '}\n                  {'(' + logs[day].length + ')'}\n                </h5>\n                <div key={index} className={`day ${summary ? 'summary' : ''}`}>\n                  {logs[day]\n                    .slice(summary ? -40 : 0)\n                    .map((patient, indexTwo) => {\n                      return (\n                        <div\n                          key={indexTwo}\n                          className={applyClass(patient)}\n                          onClick={() => {\n                            setModal(true);\n                            setPatient(patient);\n                          }}\n                        >\n                          <h3>{expand ? `P${patient.patientnumber}` : ''}</h3>\n                        </div>\n                      );\n                    })}\n                </div>\n              </React.Fragment>\n            );\n          } else {\n            return null;\n          }\n        })}\n    </div>\n  );\n}\n\nexport default PatientsView;\n","import PatientsView from './patientsview';\n\nimport {parse} from 'date-fns';\nimport React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {useLockBodyScroll} from 'react-use';\n\nfunction Patients(props) {\n  const [patients, setPatients] = useState(props.patients);\n  const [patient, setPatient] = useState(props.patients.slice(-1));\n  const [logs, setLogs] = useState({});\n  const [modal, setModal] = useState(false);\n\n  useLockBodyScroll(modal);\n\n  window.onclick = function (event) {\n    const modal = document.getElementById('modal');\n    if (event.target === modal) {\n      setModal(false);\n    }\n  };\n\n  useEffect(() => {\n    setPatients(props.patients);\n  }, [props.patients]);\n\n  const parseByDate = useCallback((patients) => {\n    const log = {};\n    for (let i = 0; i < patients.length; i++) {\n      const day = new Date(\n        parse(patients[i].dateannounced, 'dd/MM/yyyy', new Date())\n      );\n      if (!(day in log)) {\n        const list = [];\n        list.push(patients[i]);\n        log[day] = list;\n      } else {\n        const list = log[day];\n        list.push(patients[i]);\n        log[day] = list;\n      }\n    }\n    setLogs(log);\n  }, []);\n\n  useEffect(() => {\n    if (patients.length) {\n      parseByDate(patients);\n    }\n  }, [parseByDate, patients]);\n\n  const switchPatient = (patientIndexArg) => {\n    if (patientIndexArg === '') return;\n    try {\n      const patientIndex = patientIndexArg.slice(1);\n      // eslint-disable-next-line\n      patients.map((patient, index) => {\n        if (patient.patientnumber === patientIndex) setPatient(patient);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getClassNameFn = (colorMode) => {\n    switch (colorMode) {\n      case 'genders':\n        return (patient) => {\n          return `patient-card ${\n            patient.gender === 'F'\n              ? 'is-femme'\n              : patient.gender === 'M'\n              ? 'is-male'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'transmission':\n        return (patient) => {\n          return `patient-card ${\n            patient.typeoftransmission === 'Local'\n              ? 'is-local'\n              : patient.typeoftransmission === 'Imported'\n              ? 'is-imported'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'nationality':\n        return (patient) => {\n          return `patient-card ${\n            patient.nationality === 'India'\n              ? 'is-in'\n              : patient.nationality === 'Myanmar'\n              ? 'is-mm'\n              : patient.nationality === 'Indonesia'\n              ? 'is-id'\n              : patient.nationality === 'United Kingdom'\n              ? 'is-uk'\n              : patient.nationality === 'United States of America'\n              ? 'is-us'\n              : patient.nationality === 'Thailand'\n              ? 'is-th'\n              : patient.nationality === 'Phillipines'\n              ? 'is-ph'\n              : patient.nationality === 'Italy'\n              ? 'is-it'\n              : patient.nationality === 'Canada'\n              ? 'is-ca'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'age':\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n      default:\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PatientsView\n        logs={logs}\n        setModal={setModal}\n        setPatient={setPatient}\n        expand={props.expand}\n        applyClass={getClassNameFn(props.colorMode)}\n      />\n\n      {modal && (\n        <div className=\"modal\" id=\"modal\">\n          <div\n            className={`modal-content ${modal ? 'fadeInUp' : 'fadeOutDown'}`}\n          >\n            <div className=\"close-button\">\n              <Icon.XCircle\n                onClick={() => {\n                  setModal(false);\n                }}\n              />\n            </div>\n\n            <div className=\"modal-top\">\n              <h1>#{patient.patientnumber}</h1>\n            </div>\n\n            <div className=\"meta\">\n              <h5>Date Announced</h5>\n              <h3>{patient.dateannounced ? patient.dateannounced : '?'}</h3>\n\n              <h5>Contracted from</h5>\n              <h3\n                className=\"contracted-from\"\n                onClick={() => {\n                  switchPatient(patient.contractedfromwhichpatientsuspected);\n                }}\n              >\n                {patient.contractedfromwhichpatientsuspected\n                  ? patient.contractedfromwhichpatientsuspected\n                  : '?'}\n              </h3>\n\n              <h5>Detected City</h5>\n              <h3>{patient.detectedcity ? patient.detectedcity : '?'}</h3>\n\n              <h5>Detected District</h5>\n              <h3>\n                {patient.detecteddistrict ? patient.detecteddistrict : '?'}\n              </h3>\n\n              <h5>Detected State</h5>\n              <h3>{patient.detectedstate ? patient.detectedstate : '?'}</h3>\n\n              <h5>Nationality</h5>\n              <h3>{patient.nationality ? patient.nationality : '?'}</h3>\n\n              <h5>Age</h5>\n              <h3>{patient.agebracket ? patient.agebracket : '?'}</h3>\n\n              <h5>Gender</h5>\n              <h3>{patient.gender ? patient.gender : '?'}</h3>\n\n              <h5>State Patient Number</h5>\n              <h3>\n                {patient.statepatientnumber ? patient.statepatientnumber : '?'}\n              </h3>\n\n              <h5>Type of transmission</h5>\n              <h3>\n                {patient.typeoftransmission ? patient.typeoftransmission : '?'}\n              </h3>\n            </div>\n\n            <div className=\"notes\">\n              <h5>Notes</h5>\n              <h3>{patient.notes}</h3>\n            </div>\n\n            <h5>Source 1</h5>\n            <div className=\"link\">\n              <a href={patient.source1} target=\"_noblank\">\n                {patient.source1}\n              </a>\n            </div>\n\n            <h5>Source 2</h5>\n            <div className=\"link\">\n              <a href={patient.source2} target=\"_noblank\">\n                {patient.source2}\n              </a>\n            </div>\n\n            <h5>Source 3</h5>\n            <div className=\"link\">\n              <a href={patient.source3} target=\"_noblank\">\n                {patient.source3}\n              </a>\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Patients;\n","import DownloadBlock from './downloadblock';\nimport Footer from './footer';\nimport Patients from './patients';\n\nimport axios from 'axios';\nimport { format, subDays } from 'date-fns';\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-date-picker';\nimport * as Icon from 'react-feather';\nimport { useLocation } from 'react-router-dom';\nimport { useEffectOnce, useLocalStorage } from 'react-use';\n\nfunction filterByObject(obj, filters) {\n  const keys = Object.keys(filters);\n  return obj.filter((p) => {\n    return keys.every((key) => {\n      if (!filters[key].length) return true;\n      return p[key] === filters[key];\n    });\n  });\n}\n\nfunction PatientDB(props) {\n  const [fetched, setFetched] = useState(false);\n  const [patients, setPatients] = useState([]);\n  const [filteredPatients, setFilteredPatients] = useState([]);\n  const { pathname } = useLocation();\n  const [colorMode, setColorMode] = useState('genders');\n  const [scaleMode, setScaleMode] = useState(false);\n  const [filterDate, setFilterDate] = useState(subDays(new Date(), 1));\n  const [showReminder, setShowReminder] = useLocalStorage('showReminder', true);\n  const [message, setMessage] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState({\n    detectedstate: '',\n    detecteddistrict: '',\n    detectedcity: '',\n    dateannounced: format(subDays(new Date(), 1), 'dd/MM/yyyy'),\n  });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  useEffectOnce(() => {\n    try {\n      axios\n        .get('https://api.covid19india.org/raw_data.json')\n        .then((response) => {\n          setPatients(response.data.raw_data.reverse());\n          setFetched(true);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  });\n\n  useEffect(() => {\n    const datePickers = document.querySelectorAll(\n      '.react-date-picker__inputGroup input'\n    );\n    datePickers.forEach((el) => el.setAttribute('readOnly', true));\n  }, []);\n\n  const handleFilters = (label, value) => {\n    setFilters((f) => {\n      // Create new object (deep copy)\n      const newFilters = { ...f };\n      newFilters[label] = value;\n      if (label === 'detectedstate') {\n        const district = document.getElementById('district');\n        const city = document.getElementById('city');\n        // Hide boxes\n        if (value === '') district.style.display = 'none';\n        else district.style.display = 'inline';\n        city.style.display = 'none';\n        // Default to empty selection\n        district.selectedIndex = 0;\n        city.selectedIndex = 0;\n        newFilters['detecteddistrict'] = '';\n        newFilters['detectedcity'] = '';\n      } else if (label === 'detecteddistrict') {\n        const city = document.getElementById('city');\n        // Hide box\n        if (value === '') city.style.display = 'none';\n        else city.style.display = 'inline';\n        // Default to empty selection\n        city.selectedIndex = 0;\n        newFilters['detectedcity'] = '';\n      }\n      return newFilters;\n    });\n  };\n\n  useEffect(() => {\n    if (filterByObject(patients, filters).length > 0) {\n      setFilteredPatients(filterByObject(patients, filters));\n      setMessage(false);\n      setLoading(false);\n    } else {\n      setMessage(true);\n    }\n  }, [patients, filters]);\n\n  function getSortedValues(obj, key) {\n    const setValues = new Set(obj.map((p) => p[key]));\n    if (setValues.size > 1) setValues.add('');\n    if (key === 'dateannounced') return Array.from(setValues);\n    return Array.from(setValues).sort();\n  }\n\n  // const selectedState = 'Chhattisgarh';\n\n  // filters.detectedstate = selectedState;\n  // \"Chhattisgarh\"\n  let stateList = getSortedValues(patients, 'detectedstate');\n  stateList = stateList.filter((state) => state === 'Chhattisgarh');\n  // console.log({ stateList, detect: filters.detectedstate });\n  // handleFilters('detecteddistrict', selectedState);\n\n  return (\n    <div className=\"PatientsDB\">\n      <div className=\"filters fadeInUp\" style={{ animationDelay: '0.2s' }}>\n        <div className=\"filters-left\">\n          <div className=\"select\">\n            <select\n              style={{ animationDelay: '0.3s' }}\n              id=\"state\"\n              onChange={(event) => {\n                handleFilters('detectedstate', event.target.value);\n              }}\n              defaultValue={filters.detectedstate}\n            >\n              <option value=\"\" disabled>\n                Select State\n              </option>\n              {stateList.map((state, index) => (\n                <option key={index} value={state}>\n                  {state === '' ? 'All' : state}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{ animationDelay: '0.4s', display: 'none' }}\n              id=\"district\"\n              onChange={(event) => {\n                handleFilters('detecteddistrict', event.target.value);\n              }}\n              defaultValue={filters.detecteddistrict}\n            >\n              <option value=\"\" disabled>\n                Select District\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                }),\n                'detecteddistrict'\n              ).map((district, index) => {\n                return (\n                  <option key={index} value={district}>\n                    {district === '' ? 'All' : district}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{ animationDelay: '0.4s', display: 'none' }}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n              defaultValue={filters.detectedcity}\n            >\n              <option value=\"\" disabled>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? 'All' : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{ animationDelay: '0.4s', display: 'none' }}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n              defaultValue={filters.detectedcity}\n            >\n              <option value=\"\" disabled>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? 'All' : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <DatePicker\n              value={filterDate}\n              minDate={new Date('30-Jan-2020')}\n              maxDate={subDays(new Date(), 1)}\n              format=\"dd/MM/y\"\n              calendarIcon={<Icon.Calendar />}\n              inputProps={\n                (onkeydown = (e) => {\n                  e.preventDefault();\n                })\n              }\n              clearIcon={<Icon.XCircle />}\n              onChange={(date) => {\n                setFilterDate(date);\n                const fomattedDate = !!date ? format(date, 'dd/MM/yyyy') : '';\n                handleFilters('dateannounced', fomattedDate);\n              }}\n            />\n          </div>\n\n          {/* <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                handleFilters('dateannounced', event.target.value);\n              }}\n            >\n              {Array.from(new Set(patients.map((p) => p.dateannounced))).map(\n                (date, index) => {\n                  return (\n                    <option key={index} value={date}>\n                      {date}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>*/}\n        </div>\n\n        <div className=\"legend\">\n          {colorMode === 'genders' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-female\"></div>\n              <h5 className=\"is-female\">Female</h5>\n              <div className=\"circle is-male\"></div>\n              <h5 className=\"is-male\">Male</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">Unknown</h5>\n            </div>\n          )}\n\n          {colorMode === 'transmission' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-local\"></div>\n              <h5 className=\"is-local\">Local</h5>\n              <div className=\"circle is-imported\"></div>\n              <h5 className=\"is-imported\">Imported</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">Unknown</h5>\n            </div>\n          )}\n\n          {colorMode === 'nationality' && (\n            <div className=\"legend-left nationality\">\n              <div className=\"circle is-in\"></div>\n              <h5 className=\"is-in\">In</h5>\n              <div className=\"circle is-uk\"></div>\n              <h5 className=\"is-uk\">Uk</h5>\n              <div className=\"circle is-us\"></div>\n              <h5 className=\"is-us\">Us</h5>\n              <div className=\"circle is-th\"></div>\n              <h5 className=\"is-thailand\">Th</h5>\n              <div className=\"circle is-ph\"></div>\n              <h5 className=\"is-ph\">Ph</h5>\n              <div className=\"circle is-it\"></div>\n              <h5 className=\"is-it\">It</h5>\n              <div className=\"circle is-ca\"></div>\n              <h5 className=\"is-ca\">Ca</h5>\n              <div className=\"circle is-id\"></div>\n              <h5 className=\"is-id\">Id</h5>\n              <div className=\"circle is-mm\"></div>\n              <h5 className=\"is-mm\">Mm</h5>\n            </div>\n          )}\n\n          <div className={`select ${colorMode}`}>\n            <select\n              style={{ animationDelay: '0.4s' }}\n              onChange={(event) => {\n                setColorMode(event.target.value);\n              }}\n              defaultValue={colorMode}\n            >\n              {/* <option value=\"\" disabled>\n                Color modes\n              </option> */}\n              <option value=\"genders\">Genders</option>\n              <option value=\"transmission\">Transmission</option>\n              <option value=\"nationality\">Nationality</option>\n              {/* <option value=\"age\">Age</option>*/}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"header fadeInUp\" style={{ animationDelay: '0.3s' }}>\n        <div>\n          <h1>Demographics</h1>\n\n          <div className=\"deep-dive\">\n            <h5>Expand</h5>\n            <input\n              type=\"checkbox\"\n              checked={scaleMode}\n              onChange={(event) => {\n                setScaleMode(!scaleMode);\n              }}\n              className=\"switch\"\n            />\n          </div>\n        </div>\n        <h6 className=\"disclaimer\">\n          Some of the data provided might be missing/unknown as the details have\n          not been shared by the state/central governments\n        </h6>\n      </div>\n\n      <div\n        className=\"reminder fadeInUp\"\n        style={{ animationDelay: '1s', display: showReminder ? '' : 'none' }}\n      >\n        <Icon.XCircle\n          onClick={() => {\n            setShowReminder(false);\n          }}\n        />\n        <p>\n          It is important that we do not think of these as just tiny boxes,\n          numbers, or just another part of statistics - among these are our\n          neighbors, our teachers, our healthcare workers, our supermarket\n          vendors, our friends, our co-workers, our children or our\n          grandparents.\n          <br />\n          <br />\n          Among these are our people.\n        </p>\n      </div>\n\n      {fetched && (\n        <div className=\"patientdb-wrapper\">\n          {loading ? (\n            ' '\n          ) : message ? (\n            <div className=\"no-result\">\n              <h5>\n                There were no new cases in\n                <span>\n                  {filters.detectedcity.length > 0\n                    ? ` ${filters.detectedcity}, `\n                    : ''}\n                  {filters.detecteddistrict.length > 0\n                    ? ` ${filters.detecteddistrict}, `\n                    : ''}\n                  {' ' + filters.detectedstate}\n                </span>{' '}\n                on <span>{filters.dateannounced}.</span>\n              </h5>\n            </div>\n          ) : (\n                <Patients\n                  patients={filteredPatients}\n                  colorMode={colorMode}\n                  expand={scaleMode}\n                />\n              )}\n        </div>\n      )}\n\n      <DownloadBlock patients={patients} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default PatientDB;\n","import FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Popover from '@material-ui/core/Popover';\nimport Select from '@material-ui/core/Select';\nimport {makeStyles} from '@material-ui/core/styles';\nimport React from 'react';\nimport * as Icon from 'react-feather';\n\nconst useFormControlStyles = makeStyles((isDesktop) => {\n  if (isDesktop === true)\n    return {\n      root: {\n        margin: '1rem',\n        flexGrow: '1',\n      },\n    };\n  else\n    return {\n      root: {\n        margin: '0.4rem',\n        flexGrow: '1',\n        width: '100%',\n      },\n    };\n});\nconst useInputLabelStyles = makeStyles(() => ({\n  root: {\n    fontFamily: 'archia',\n    fontSize: '11px !important',\n    fontWeight: 600,\n    textTransform: 'uppercase',\n  },\n}));\n\nconst useMenuItemStyles = makeStyles(() => ({\n  root: {\n    fontFamily: 'archia',\n    fontSize: '11px !important',\n    fontWeight: 600,\n    textTransform: 'uppercase',\n  },\n}));\nconst usePopOverStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: '#201aa220',\n    zIndex: '1000',\n  },\n}));\nfunction FiltersDesktop(props) {\n  const classesFormControl = useFormControlStyles();\n  const classesInputLabel = useInputLabelStyles();\n  const classesMenuItem = useMenuItemStyles();\n  const classesPopOver = usePopOverStyles();\n  return (\n    <React.Fragment>\n      <div\n        className=\"disclaimercontainer\"\n        style={{\n          display: 'flex',\n          flexDirection: 'row-reverse',\n          width: '100%',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <div\n          className=\"button desktop-disclaimer-button\"\n          style={{\n            margin: '0rem',\n            padding: '0.3rem',\n            alignItems: 'center',\n            justifyContent: 'space-around',\n          }}\n          onClick={props.handleDisclaimerClick}\n        >\n          Disclaimer\n          <Icon.AlertCircle htmlColor=\"#6c757d\" fontSize=\"0.2rem\" />\n        </div>\n        <Popover\n          id={props.disclaimerid}\n          open={props.isDisclaimerOpen}\n          classes={{root: classesPopOver.root}}\n          anchorEl={props.anchorEl}\n          onClose={props.handleDisclaimerClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n        >\n          <h6\n            style={{\n              paddingLeft: '0.5rem',\n              color: '#343a40',\n              margin: '0.3rem 0rem',\n            }}\n          >\n            <p>\n              We are a community sourced listing platform and are not associated\n              with any of the organisations listed below.\n            </p>\n            <p>\n              Although we verify all our listings, we request you to follow all\n              the guidelines and take necessary precautions.\n            </p>\n            <p>\n              We encourage you to report any error or suspicious activity so we\n              can take immediate action.\n            </p>\n          </h6>\n        </Popover>\n      </div>\n      <div className=\"resourcefilters\">\n        <FormControl\n          variant=\"outlined\"\n          size=\"small\"\n          className=\"resourcefilterDesktop\"\n          classes={{root: classesFormControl.root}}\n        >\n          <InputLabel\n            id=\"demo-simple-select-outlined-label\"\n            classes={{root: classesInputLabel.root}}\n          >\n            State/UT\n          </InputLabel>\n          <Select\n            native\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"stateselect\"\n            value={props.indianstate}\n            onChange={props.changeIndianState}\n            label=\"State/UT\"\n            classes={{root: classesMenuItem.root}}\n          >\n            <option value=\"all\" classes={{root: classesMenuItem.root}}>\n              All states\n            </option>\n            {props.stateoptions}\n          </Select>\n        </FormControl>\n        <FormControl\n          variant=\"outlined\"\n          size=\"small\"\n          className=\"resourcefilterDesktop\"\n          classes={{root: classesFormControl.root}}\n        >\n          <InputLabel\n            id=\"demo-simple-select-outlined-label\"\n            classes={{root: classesInputLabel.root}}\n          >\n            City\n          </InputLabel>\n          <Select\n            native\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"cityselect1\"\n            value={props.city}\n            onChange={props.changeCity}\n            label=\"City\"\n            classes={{root: classesMenuItem.root}}\n          >\n            <option value=\"all\" classes={{root: classesMenuItem.root}}>\n              All cities\n            </option>\n            {props.cityoptions}\n          </Select>\n        </FormControl>\n        <FormControl\n          variant=\"outlined\"\n          size=\"small\"\n          className=\"resourcefilteDesktop\"\n          classes={{root: classesFormControl.root}}\n        >\n          <InputLabel\n            id=\"demo-simple-select-outlined-label\"\n            classes={{root: classesInputLabel.root}}\n          >\n            Services\n          </InputLabel>\n          <Select\n            native\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"categoryselect\"\n            value={props.category}\n            onChange={props.changeCategory}\n            label=\"Services\"\n            classes={{root: classesMenuItem.root}}\n          >\n            <option value=\"all\" classes={{root: classesMenuItem.root}}>\n              All categories\n            </option>\n            {props.servicesoptions}\n          </Select>\n        </FormControl>\n        <button\n          className=\"button is-purple search-button-mobile\"\n          onClick={props.filterTable}\n        >\n          Search\n        </button>\n      </div>\n      <div\n        className=\"misclinkscontainer\"\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          width: '100%',\n          justifyContent: 'center',\n          marginTop: '0.2rem',\n          marginBottom: '0.6rem',\n        }}\n      >\n        <a\n          href=\"https://docs.google.com/forms/d/e/1FAIpQLSfquevp7_rdgdEoDgTdimWwTXO3B9TjFEAm3DbrMDXxCiuwuA/viewform\"\n          className=\"button add-entry is-purple\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{margin: '0rem 0.2rem', padding: '0.1rem 0.5rem'}}\n        >\n          <span>Add Entry</span>\n        </a>\n        <a\n          href=\"https://forms.gle/AG5hmYxyhto3NjU46\"\n          className=\"button add-entry is-purple\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{margin: '0rem 0.2rem', padding: '0.1rem 0.5rem'}}\n        >\n          <span>Feedback</span>\n        </a>\n        <button\n          onClick={props.openSharingTray}\n          className=\"button add-entry is-purple\"\n          style={{margin: '0rem 0.2rem', padding: '0.4rem'}}\n        >\n          <span>Share</span>\n        </button>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default FiltersDesktop;\n","import FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Popover from '@material-ui/core/Popover';\nimport Select from '@material-ui/core/Select';\nimport {makeStyles} from '@material-ui/core/styles';\nimport React from 'react';\nconst useFormControlStyles = makeStyles((isDesktop) => {\n  if (isDesktop === true)\n    return {\n      root: {\n        margin: '1rem',\n        flexGrow: '1',\n      },\n    };\n  else\n    return {\n      root: {\n        margin: '0.4rem',\n        flexGrow: '1',\n        width: '100%',\n      },\n    };\n});\nconst useInputLabelStyles = makeStyles(() => ({\n  root: {\n    fontFamily: 'archia',\n    fontSize: '11px !important',\n    fontWeight: 600,\n    textTransform: 'uppercase',\n  },\n}));\n\nconst useMenuItemStyles = makeStyles(() => ({\n  root: {\n    fontFamily: 'archia',\n    fontSize: '11px !important',\n    fontWeight: 600,\n    textTransform: 'uppercase',\n  },\n}));\nconst usePopOverStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: '#201aa220',\n    zIndex: '1000',\n  },\n}));\n\nfunction FiltersMobile(props) {\n  const classesFormControl = useFormControlStyles();\n  const classesInputLabel = useInputLabelStyles();\n  const classesMenuItem = useMenuItemStyles();\n  const classesPopOver = usePopOverStyles();\n\n  return (\n    <React.Fragment>\n      <div\n        className=\"disclaimercontainer\"\n        style={{\n          display: 'flex',\n          flexDirection: 'row-reverse',\n          width: '100%',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <div\n          className=\"button is-purple mobile-disclaimer-button\"\n          style={{\n            margin: '0.2rem',\n            padding: '0.5rem',\n            alignItems: 'center',\n          }}\n          onClick={props.handleDisclaimerClick}\n        >\n          Disclaimer\n        </div>\n        <Popover\n          id={props.popoverid}\n          open={props.isDisclaimerOpen}\n          classes={{root: classesPopOver.root}}\n          anchorEl={props.anchorEl}\n          onClose={props.handleDisclaimerClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n        >\n          <h6\n            style={{\n              paddingLeft: '0.5rem',\n              color: '#343a40',\n              margin: '0.3rem 0rem',\n            }}\n          >\n            <p>\n              We are a community sourced listing platform and are not associated\n              with any of the organisations listed below.\n            </p>\n            <p>\n              Although we verify all our listings, we request you to follow all\n              the guidelines and take necessary precautions.\n            </p>\n            <p>\n              We encourage you to report any error or suspicious activity so we\n              can take immediate action.\n            </p>\n          </h6>\n        </Popover>\n        <a\n          href=\"https://docs.google.com/forms/d/e/1FAIpQLSfquevp7_rdgdEoDgTdimWwTXO3B9TjFEAm3DbrMDXxCiuwuA/viewform\"\n          className=\"button add-entry is-purple\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{margin: '0.2rem 0.2rem', padding: '0.5rem 0.5rem'}}\n        >\n          <span>Add</span>\n        </a>\n        <a\n          href=\"https://forms.gle/AG5hmYxyhto3NjU46\"\n          className=\"button add-entry is-purple\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{margin: '0.2rem 0.2rem', padding: '0.5rem 0.5rem'}}\n        >\n          <span>Feedback</span>\n        </a>\n      </div>\n      <div className=\"resourcefilters\">\n        <FormControl\n          variant=\"outlined\"\n          size=\"small\"\n          className=\"resourcefilterMobile\"\n          classes={{root: classesFormControl.root}}\n        >\n          <InputLabel\n            id=\"demo-simple-select-outlined-label\"\n            classes={{root: classesInputLabel.root}}\n          >\n            State/UT\n          </InputLabel>\n          <Select\n            native\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"stateselect\"\n            value={props.indianstate}\n            onChange={props.changeIndianState}\n            label=\"State/UT\"\n            classes={{root: classesMenuItem.root}}\n          >\n            <option value=\"all\" classes={{root: classesMenuItem.root}}>\n              All states\n            </option>\n            {props.stateoptions}\n          </Select>\n        </FormControl>\n        <FormControl\n          variant=\"outlined\"\n          size=\"small\"\n          className=\"resourcefilterMobile\"\n          classes={{root: classesFormControl.root}}\n        >\n          <InputLabel\n            id=\"demo-simple-select-outlined-label\"\n            classes={{root: classesInputLabel.root}}\n          >\n            City\n          </InputLabel>\n          <Select\n            native\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"cityselect1\"\n            value={props.city}\n            onChange={props.changeCity}\n            label=\"City\"\n            classes={{root: classesMenuItem.root}}\n          >\n            <option value=\"all\" classes={{root: classesMenuItem.root}}>\n              All Cities\n            </option>\n            {props.cityoptions}\n          </Select>\n        </FormControl>\n        <FormControl\n          variant=\"outlined\"\n          size=\"small\"\n          className=\"resourcefilterMobile\"\n          classes={{root: classesFormControl.root}}\n        >\n          <InputLabel\n            id=\"demo-simple-select-outlined-label\"\n            classes={{root: classesInputLabel.root}}\n          >\n            Services\n          </InputLabel>\n          <Select\n            native\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"categoryselect\"\n            value={props.category}\n            onChange={props.changeCategory}\n            label=\"Services\"\n            classes={{root: classesMenuItem.root}}\n          >\n            <option value=\"all\" classes={{root: classesMenuItem.root}}>\n              All Categories\n            </option>\n            {props.servicesoptions}\n          </Select>\n        </FormControl>\n\n        <div\n          className=\"search-share\"\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            width: '100%',\n          }}\n        >\n          <button\n            className=\"button is-purple search-button-desktop\"\n            onClick={props.filterTable}\n            style={{\n              margin: '0.2rem 0.2rem',\n              padding: '0.5rem 0.5rem',\n              width: '50%',\n              justifyContent: 'center',\n            }}\n          >\n            Search\n          </button>\n          <button\n            onClick={props.openSharingTray}\n            className=\"button add-entry is-purple\"\n            style={{\n              margin: '0.2rem 0.2rem',\n              padding: '0.5rem 0.5rem',\n              width: '50%',\n              justifyContent: 'center',\n            }}\n          >\n            <span>Share</span>\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\nexport default FiltersMobile;\n","import React from 'react';\nexport const getNumbersLink = (initialValue) => {\n  // const phoneno = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n  const numbf = initialValue.split(',');\n  const numberList = numbf.map((el) => {\n    return `<a href=\"tel:${el}\">${el}</a>`;\n  });\n  // const numbg = /^\\d{3,12}$/g;\n  // const numberList = numbf.map((iv, i) => {\n  //   iv = iv.trim();\n  //   return iv.replace(numbg, '<a href=\"tel:$&\">$&</a>');\n  // });\n  return {numberList};\n};\nexport const getFormattedLinkForAccordion = (initialValue) => {\n  return (\n    <div\n      className=\"tablecelldata\"\n      dangerouslySetInnerHTML={{\n        __html: getFormattedLink(initialValue),\n      }}\n    ></div>\n  );\n};\n\nexport const getFormattedLink = (initialValue) => {\n  const reurl1 = /\\s*(https?:\\/\\/.+)\\s*/g;\n  // let reurl2 = /\\s*.(www\\..+)\\s/g\n  const reinsta = /\\s*Instagram: @(.+)\\s*/g;\n  const refb = /\\s*Facebook: @(.+)\\s*/g;\n  const noLetters = /^[\\d,\\s]+$/;\n  let s3 = '';\n  if (initialValue.match(noLetters) != null) {\n    const formatedLink = getNumbersLink(initialValue);\n    const links = JSON.parse(JSON.stringify(formatedLink));\n    s3 = String(links.numberList).replace(/,/g, '<br>');\n  } else {\n    const s1 = initialValue.replace(\n      reurl1,\n      '<a href=\"$1\" target=\"_blank\">Link</a>'\n    );\n    const s2 = s1.replace(\n      reinsta,\n      '<a href=\"https://www.instagram.com/$1\" target=\"_blank\">Instagram: @$1</a>'\n    );\n    s3 = s2.replace(\n      refb,\n      '<a href=\"https://www.facebook.com/$1\" target=\"_blank\">Facebook: @$1</a>'\n    );\n  }\n  return s3;\n};\n\nconst customJoinHighlight = (list, joinVals) => {\n  let result = '';\n  let i = 0;\n  for (i = 0; i < list.length - 1; i++) {\n    result +=\n      list[i] +\n      '<span style=\"background-color: yellow\">' +\n      joinVals[i] +\n      '</span>';\n  }\n  result += list[i];\n  return result;\n};\n\nconst customJoinHighlightMobile = (list, joinVals) => {\n  const result = [];\n  let i = 0;\n  for (i = 0; i < list.length - 1; i++) {\n    result.push(<span key={i}>{list[i]}</span>);\n    result.push(<span style={{backgroundColor: 'yellow'}}>{joinVals[i]}</span>);\n  }\n  result.push(<span key={i}>{list[i]}</span>);\n  return result;\n};\n\nexport const getHighlightedText = (text, searchValue, type) => {\n  // uses searchValue state!!\n  if (searchValue === '') {\n    return text;\n  }\n\n  const regexObject = new RegExp(searchValue, 'gi');\n\n  const parts = text.split(regexObject);\n  if (parts.length === 1) {\n    return text;\n  } else {\n    const matches = [...text.matchAll(regexObject)];\n    if (type === 'desktop') {\n      return customJoinHighlight(parts, matches);\n    } else {\n      return customJoinHighlightMobile(parts, matches);\n    }\n  }\n};\n\n// searchbar stuff\n\nexport const getSuggestions = (value, resources) => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  return inputLength === 0\n    ? resources\n    : resources.filter(\n        (resource) =>\n          resource.category.toLowerCase().indexOf(inputValue) !== -1 ||\n          resource.city.toLowerCase().indexOf(inputValue) !== -1 ||\n          resource.descriptionandorserviceprovided\n            .toLowerCase()\n            .indexOf(inputValue) !== -1 ||\n          resource.nameoftheorganisation.toLowerCase().indexOf(inputValue) !==\n            -1 ||\n          resource.state.toLowerCase().indexOf(inputValue) !== -1\n      );\n};\n\n// export const getSuggestionValue = (suggestion) =>\n//   suggestion.nameoftheorganisation;\n\n// export const renderSuggestion = (suggestion) => (\n//   <div>{suggestion.nameoftheorganisation}</div>\n// );\n\nexport const parseText = function (text, limit) {\n  if (text.length > limit) {\n    for (let i = limit; i > 0; i--) {\n      if (\n        text.charAt(i) === ' ' &&\n        (text.charAt(i - 1) !== ',' ||\n          text.charAt(i - 1) !== '.' ||\n          text.charAt(i - 1) !== ';')\n      ) {\n        return text.substring(0, i) + '...';\n      }\n    }\n    return text.substring(0, limit) + '...';\n  } else return text;\n};\n","import {\n  getFormattedLinkForAccordion,\n  parseText,\n  getHighlightedText,\n} from './essentialsutls';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {makeStyles} from '@material-ui/core/styles';\nimport React from 'react';\n\nconst usePanelSummaryStyles = makeStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  root: {\n    backgroundColor: '#201aa220',\n    height: '4rem',\n  },\n}));\nconst usePanelDetailsStyles = makeStyles((theme) => ({\n  root: {\n    padding: '0px 5px 0px 24px',\n  },\n}));\nconst useListStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n}));\n\nconst usePanelStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    marginBottom: '0.2rem',\n  },\n}));\nconst useItemTextStyles = makeStyles((theme) => ({\n  primary: {\n    fontFamily: 'Archia',\n    fontWeight: 500,\n    fontStyle: 'normal',\n    fontSize: '13px',\n    fontTransform: 'uppercase',\n  },\n  secondary: {\n    fontFamily: 'Archia',\n    fontWeight: 400,\n    fontStyle: 'normal',\n    fontSize: '12px',\n    width: '100%',\n    wordWrap: 'break-word',\n    // fontTransform: 'uppercase'\n  },\n}));\n\nfunction TableAccordion({rows, searchValue}) {\n  const classesPannelSummary = usePanelSummaryStyles();\n  const classesPanel = usePanelStyles();\n  const classesListItemText = useItemTextStyles();\n  const classesPanelDetails = usePanelDetailsStyles();\n  const classesList = useListStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const handleExpansionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n  return (\n    <React.Fragment>\n      {rows.map((row, i) => {\n        return (\n          <ExpansionPanel\n            key={i}\n            classes={{root: classesPanel.root}}\n            expanded={expanded === `panel-${i}`}\n            onChange={handleExpansionChange(`panel-${i}`)}\n          >\n            <ExpansionPanelSummary\n              classes={{\n                content: classesPannelSummary.content,\n                root: classesPannelSummary.root,\n              }}\n            >\n              <div\n                className=\"orgname\"\n                style={{\n                  maxWidth: '10rem',\n                  textAlign: 'start',\n                  color: '#201aa2dd',\n                }}\n              >\n                <h6>{parseText(row.values['nameoftheorganisation'], 50)}</h6>\n              </div>\n              <div\n                className=\"orgcategory\"\n                style={{maxWidth: '10.9rem', textAlign: 'end'}}\n              >\n                <h6>{row.values['category']}</h6>\n              </div>\n              {/* </div> */}\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails classes={{root: classesPanelDetails.root}}>\n              <List\n                disablePadding={true}\n                dense={true}\n                classes={{root: classesList.root}}\n              >\n                <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                  <ListItemText\n                    primary=\"Organisation Name\"\n                    secondary={getHighlightedText(\n                      row.values['nameoftheorganisation'],\n                      searchValue,\n                      'mobile'\n                    )}\n                    classes={{\n                      primary: classesListItemText.primary,\n                      secondary: classesListItemText.secondary,\n                    }}\n                    secondaryTypographyProps={{\n                      component: 'a',\n                      href: row.values.contact,\n                      target: '_blank',\n                      rel: 'noopener noreferrer',\n                      color: 'blue',\n                    }}\n                  />\n                </ListItem>\n                <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                  <ListItemText\n                    primary=\"Location\"\n                    secondary={getHighlightedText(\n                      row.values['city'],\n                      searchValue,\n                      'mobile'\n                    )}\n                    classes={{\n                      primary: classesListItemText.primary,\n                      secondary: classesListItemText.secondary,\n                    }}\n                  />\n                </ListItem>\n                <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                  <ListItemText\n                    primary=\"Description\"\n                    secondary={getHighlightedText(\n                      row.values['descriptionandorserviceprovided'],\n                      searchValue,\n                      'mobile'\n                    )}\n                    classes={{\n                      primary: classesListItemText.primary,\n                      secondary: classesListItemText.secondary,\n                    }}\n                  />\n                </ListItem>\n                <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                  <ListItemText\n                    primary=\"Service\"\n                    secondary={getHighlightedText(\n                      row.values['category'],\n                      searchValue,\n                      'mobile'\n                    )}\n                    classes={{\n                      primary: classesListItemText.primary,\n                      secondary: classesListItemText.secondary,\n                    }}\n                  />\n                </ListItem>\n                <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                  <ListItemText\n                    primary=\"Phonenumber\"\n                    secondary={getFormattedLinkForAccordion(\n                      row.values['phonenumber']\n                    )}\n                    classes={{\n                      primary: classesListItemText.primary,\n                      secondary: classesListItemText.secondary,\n                    }}\n                    secondaryTypographyProps={{component: 'span'}}\n                  />\n                </ListItem>\n              </List>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        );\n      })}\n    </React.Fragment>\n  );\n}\n\nexport default TableAccordion;\n","import TableAccordion from './Essentials/essentialsaccordionmobile';\nimport {\n  // renderCell,\n  getHighlightedText,\n  getFormattedLink,\n  getSuggestions,\n} from './Essentials/essentialsutls';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport React, {useState, useEffect, useRef} from 'react';\n// import Autosuggest from 'react-autosuggest';\nimport * as Icon from 'react-feather';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport {useTable} from 'react-table';\n\nfunction ResourceTable({\n  columns,\n  data,\n  isDesktop,\n  totalCount,\n  onScrollUpdate,\n  city,\n  category,\n  indianstate,\n}) {\n  const [searchValue, setSearchValue] = useState('');\n  const [suggestions, setSuggestions] = useState(data);\n  const prevIndianState = useRef('');\n  const prevCity = useRef('');\n  const prevCategory = useRef('');\n\n  const renderCell = (celli) => {\n    const value = celli.cell.value;\n    let renderedvalue = '';\n    const link = celli.row.allCells[5].value.split(',')[0];\n\n    if (celli.column.id === 'contact')\n      renderedvalue = getFormattedLink(\n        getHighlightedText(value, searchValue, 'desktop')\n      );\n    else if (celli.column.id === 'phonenumber') {\n      // renderedvalue = String(JSON.parse(JSON.stringify(getNumbersLink(value))).numberList).replace(/,/g, '<br>');\n      renderedvalue = getFormattedLink(\n        getHighlightedText(value, searchValue, 'desktop')\n      );\n    } else if (celli.column.id === 'nameoftheorganisation') {\n      if (link !== '')\n        renderedvalue = `<a href=${link} target=\"_blank\">${getHighlightedText(\n          value,\n          searchValue,\n          'desktop'\n        )}</a>`;\n      else renderedvalue = getHighlightedText(value, searchValue, 'desktop');\n    } else renderedvalue = getHighlightedText(value, searchValue, 'desktop');\n\n    return (\n      <div\n        className=\"tablecelldata\"\n        dangerouslySetInnerHTML={{\n          __html: renderedvalue,\n        }}\n      ></div>\n    );\n  };\n\n  useEffect(() => {\n    if (\n      prevCategory.current === category &&\n      prevIndianState.current === indianstate &&\n      prevCity.current === city\n    ) {\n      setSuggestions(getSuggestions(searchValue, data));\n    } else {\n      setSuggestions(data);\n      setSearchValue('');\n      prevCategory.current = category;\n      prevIndianState.current = indianstate;\n      prevCity.current = city;\n    }\n  }, [searchValue, data, category, indianstate, city]);\n\n  useEffect(() => {\n    if (suggestions.length < 7 && totalCount > suggestions.length) {\n      onScrollUpdate();\n    }\n  }, [suggestions, totalCount, onScrollUpdate]);\n\n  setInterval(checkAutosuggestChange, 2000);\n\n  function checkAutosuggestChange() {\n    try {\n      const newVal = document.getElementById('input-field-searchbar').value;\n      if (newVal !== searchValue) {\n        setSearchValue(newVal);\n      }\n    } catch {}\n  }\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    rows,\n  } = useTable({\n    columns,\n    data: suggestions,\n    initialState: {hiddenColumns: 'contact'},\n  });\n  return (\n    <React.Fragment>\n      <div className=\"searchbar\">\n        <TextField\n          id=\"input-field-searchbar\"\n          label=\"Search keyword\"\n          fullWidth={true}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          style={{\n            width: '100%',\n          }}\n          variant=\"outlined\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Icon.Search size=\"0.9em\" />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </div>\n      <InfiniteScroll\n        dataLength={suggestions.length}\n        hasMore={suggestions.length < totalCount}\n        next={onScrollUpdate}\n        loader={\n          <h3 style={{textAlign: 'center'}}>\n            <img\n              src=\"https://upload.wikimedia.org/wikipedia/commons/d/dd/Loading-gif-builder-comwrap.gif\"\n              alt=\"Loading data\"\n            />\n          </h3>\n        }\n        style={\n          isDesktop\n            ? {width: '100%', overflow: 'none'}\n            : {width: '100%', overflow: 'none', maxWidth: '300px'}\n        }\n      >\n        <div className=\"tableandaccordions\">\n          {isDesktop && (\n            <table {...getTableProps()}>\n              <thead>\n                {headerGroups.map((headerGroup) => (\n                  <tr\n                    key={headerGroup.id}\n                    {...headerGroup.getHeaderGroupProps()}\n                  >\n                    {headerGroup.headers.map((column, i) => (\n                      <th\n                        key={column.id}\n                        {...column.getHeaderProps()}\n                        className={i === 3 ? 'descriptionCol sticky' : 'sticky'}\n                      >\n                        {column.render('Header')}\n                      </th>\n                    ))}\n                  </tr>\n                ))}\n              </thead>\n              <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                  prepareRow(row);\n                  return (\n                    <tr key={row.id} {...row.getRowProps()}>\n                      {row.cells.map((cell, cellindex) => {\n                        return (\n                          <td key={cellindex} {...cell.getCellProps()}>\n                            {cell.render(renderCell)}\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          )}\n          {!isDesktop && (\n            <TableAccordion rows={rows} searchValue={searchValue} />\n          )}\n        </div>\n      </InfiniteScroll>\n    </React.Fragment>\n  );\n}\n\nexport default ResourceTable;\n","import FiltersDesktop from './Essentials/essentialsfiltersdesktop';\nimport FiltersMobile from './Essentials/essentialsfiltersmobile';\nimport ResourceTable from './resourcetable';\n\nimport {Fab, Fade} from '@material-ui/core';\nimport axios from 'axios';\nimport React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\n\nfunction Resources(props) {\n  const [data, setData] = useState([]);\n  const [partData, setPartData] = useState([]);\n  const [fetched, setFetched] = useState(false);\n  const [city, setCity] = useState('all');\n  const [category, setCategory] = useState('all');\n  const [indianstate, setIndianState] = useState('all');\n  const [resourcedict, setResourceDict] = useState({});\n  const [showTable, setShowTable] = useState(false);\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [hasScrolled, setHasScrolled] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  useEffect(() => {\n    if (fetched === false) {\n      getResources();\n    }\n  }, [fetched, data, resourcedict]);\n\n  const checkForResizeEvent = useCallback((event) => {\n    if (window.innerWidth > 639) setIsDesktop(true);\n    else setIsDesktop(false);\n  }, []);\n\n  useEffect(() => {\n    if (window.innerWidth > 639) setIsDesktop(true);\n    else setIsDesktop(false);\n    window.addEventListener('resize', checkForResizeEvent);\n    return () => {\n      window.removeEventListener('resize', checkForResizeEvent);\n    };\n  }, [isDesktop, checkForResizeEvent]);\n\n  const checkScrollEvent = useCallback((event) => {\n    window.pageYOffset > 100 ? setHasScrolled(true) : setHasScrolled(false);\n  }, []);\n\n  useEffect(() => {\n    window.pageYOffset > 100 ? setHasScrolled(true) : setHasScrolled(false);\n    window.addEventListener('scroll', checkScrollEvent);\n    return () => {\n      window.removeEventListener('scroll', checkScrollEvent);\n    };\n  }, [hasScrolled, checkScrollEvent]);\n\n  const getResources = async () => {\n    try {\n      const [response] = await Promise.all([\n        axios.get('https://api.covid19india.org/resources/resources.json'),\n      ]);\n      // setData(response.data.resources);\n      const hashmap = {};\n      response.data.resources.forEach((x) => {\n        if (typeof hashmap[x['state']] === 'undefined')\n          hashmap[x['state']] = {};\n        if (typeof hashmap[x['state']][x['city']] === 'undefined')\n          hashmap[x['state']][x['city']] = {};\n        if (\n          typeof hashmap[x['state']][x['city']][x['category']] === 'undefined'\n        )\n          hashmap[x['state']][x['city']][x['category']] = [];\n        if (Array.isArray(hashmap[x['state']][x['city']][x['category']]))\n          hashmap[x['state']][x['city']][x['category']].push(x);\n      });\n\n      setResourceDict(hashmap);\n      // setIndianState(Object.keys()[0]);\n\n      setFetched(true);\n    } catch (err) {}\n  };\n\n  const handleDisclaimerClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleDisclaimerClose = () => {\n    setAnchorEl(null);\n  };\n\n  const isDisclaimerOpen = Boolean(anchorEl);\n  const id = isDisclaimerOpen ? 'simple-popover' : undefined;\n\n  function animateScroll() {\n    document.body.scrollTo({top: 0, behavior: 'smooth'}); // For Safari\n    document.documentElement.scrollTo({top: 0, behavior: 'smooth'}); // For Chrome, Firefox, IE and Opera\n  }\n\n  const memocols = React.useMemo(\n    () => [\n      {\n        Header: 'City',\n        accessor: 'city',\n      },\n      {\n        Header: 'Category',\n        accessor: 'category',\n      },\n      {\n        Header: 'Organisation',\n        accessor: 'nameoftheorganisation',\n      },\n      {\n        Header: 'Description',\n        accessor: 'descriptionandorserviceprovided',\n      },\n      {\n        Header: 'Phone',\n        accessor: 'phonenumber',\n      },\n      {\n        Header: 'Source',\n        accessor: 'contact',\n        isVisible: false,\n      },\n    ],\n    []\n  );\n  // const memodata = React.useMemo(() => data, [data])\n\n  const getCityOptions = function () {\n    if (indianstate) {\n      if (indianstate === 'all') return [];\n      else {\n        return Object.keys(resourcedict[indianstate])\n          .sort()\n          .map((x, i) => (\n            <option\n              key={i}\n              value={x}\n              style={{\n                fontFamily: 'archia',\n                fontSize: '11px !important',\n                fontWeight: 600,\n                textTransform: 'uppercase',\n              }}\n            >\n              {x}\n            </option>\n          ));\n      }\n    } else return [];\n    // return getCityList().map((x) => <option value={x}>{x}</option>)\n  };\n  const getIndianStateOptions = function () {\n    // let defaultOption = ['Please select']\n    return Object.keys(resourcedict)\n      .sort()\n      .map((x, i) => (\n        <option\n          key={i}\n          value={x}\n          style={{\n            fontFamily: 'archia',\n            fontSize: '11px !important',\n            fontWeight: 600,\n            textTransform: 'uppercase',\n          }}\n        >\n          {x}\n        </option>\n      ));\n  };\n  const getCategoryOptions = function () {\n    if (indianstate && city) {\n      if (indianstate === 'all') {\n        const array = [];\n        Object.values(resourcedict).forEach((state) => {\n          Object.values(state).forEach((citydata) => {\n            Object.keys(citydata).forEach((x) => {\n              if (array.indexOf(x) === -1) array.push(x);\n            });\n          });\n        });\n        return array.sort().map((x, i) => (\n          <option\n            key={i}\n            value={x}\n            style={{\n              fontFamily: 'archia',\n              fontSize: '11px !important',\n              fontWeight: 600,\n              textTransform: 'uppercase',\n            }}\n          >\n            {x}\n          </option>\n        ));\n      } else {\n        if (city === 'all') {\n          const array = [];\n          Object.values(resourcedict[indianstate]).forEach((citydata) => {\n            Object.keys(citydata).forEach((x) => {\n              if (array.indexOf(x) === -1) array.push(x);\n            });\n          });\n          return array.sort().map((x, i) => (\n            <option\n              key={i}\n              value={x}\n              style={{\n                fontFamily: 'archia',\n                fontSize: '11px !important',\n                fontWeight: 600,\n                textTransform: 'uppercase',\n              }}\n            >\n              {x}\n            </option>\n          ));\n        } else {\n          return Object.keys(resourcedict[indianstate][city])\n            .sort()\n            .map((x, i) => (\n              <option\n                key={i}\n                value={x}\n                style={{\n                  fontFamily: 'archia',\n                  fontSize: '11px !important',\n                  fontWeight: 600,\n                  textTransform: 'uppercase',\n                }}\n              >\n                {x}\n              </option>\n            ));\n        }\n      }\n    } else return [];\n  };\n\n  const filterTable = function () {\n    let a = [];\n    if (category === 'all') {\n      if (city === 'all') {\n        if (indianstate === 'all') {\n          Object.values(resourcedict).forEach((state) => {\n            Object.values(state).forEach((citydata) => {\n              Object.values(citydata).forEach((category) => {\n                category.forEach((x) => a.push(x));\n              });\n            });\n          });\n        } else {\n          Object.values(resourcedict[indianstate]).forEach((citydata) => {\n            Object.values(citydata).forEach((category) => {\n              category.forEach((x) => a.push(x));\n            });\n          });\n        }\n      } else {\n        Object.values(resourcedict[indianstate][city]).forEach((x) => {\n          x.forEach((y) => a.push(y));\n        });\n      }\n    } else {\n      if (indianstate === 'all' && city === 'all') {\n        Object.values(resourcedict).forEach((state) => {\n          Object.values(state).forEach((citydata) => {\n            Object.values(citydata).forEach((categorydata) => {\n              categorydata.forEach((x) => {\n                if (x.category === category) a.push(x);\n              });\n            });\n          });\n        });\n      } else if (indianstate !== 'all' && city === 'all') {\n        Object.values(resourcedict[indianstate]).forEach((citydata) => {\n          if (category in citydata) {\n            citydata[category].forEach((x) => {\n              a.push(x);\n            });\n          }\n        });\n      } else {\n        a = resourcedict[indianstate][city][category];\n      }\n    }\n    try {\n      if ('PAN India' in resourcedict) {\n        resourcedict['PAN India']['Multiple']['CoVID-19 Testing Lab'].forEach(\n          (element) => {\n            a.push(element);\n          }\n        );\n      }\n    } catch (err) {}\n    setData(a);\n    setPartData(a.slice(0, 30));\n    setShowTable(true);\n  };\n\n  const changeIndianState = function (changedstateevent) {\n    setIndianState(changedstateevent.target.value);\n    // setCity(\n    //   Object.keys(resourcedict[changedstateevent.target.value]).sort()[0]\n    // );\n    if (changedstateevent.target.value === '') {\n      setCity('');\n      document.getElementById('cityselect1').selectedIndex = 0;\n      setCategory('');\n      document.getElementById('categoryselect').selectedIndex = 0;\n    } else {\n      setCity('all');\n      document.getElementById('cityselect1').selectedIndex = 1;\n      setCategory('all');\n      document.getElementById('categoryselect').selectedIndex = 1;\n    }\n  };\n  const changeCity = function (changedcityevent) {\n    setCity(changedcityevent.target.value);\n    setCategory('all');\n    document.getElementById('categoryselect').selectedIndex = 1;\n  };\n  const changeCategory = function (changedcategoryevent) {\n    setCategory(changedcategoryevent.target.value);\n  };\n  const appendData = function () {\n    const tempArr = partData.concat(\n      data.slice(partData.length, partData.length + 30)\n    );\n    setPartData(tempArr);\n  };\n\n  const openSharingLink = function (message) {\n    const shareUri = `https://www.addtoany.com/share#url=${encodeURI(\n      'https://www.covid19india.org/essentials'\n    )}&title=${encodeURI(message)}`;\n\n    const h = 500;\n    const w = 500;\n    const left = window.screen.width / 2 - w / 2;\n    const top = window.screen.height / 2 - h / 2;\n    return window.open(\n      shareUri,\n\n      document.title,\n      'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=' +\n        w +\n        ', height=' +\n        h +\n        ', top=' +\n        top +\n        ', left=' +\n        left\n    );\n  };\n\n  const openSharingTray = function () {\n    const message =\n      'Discover nearest coronavirus support and essential service providers such as testing lab centres, accommodation shelters and vegetable vendors at ';\n    if (navigator.share !== undefined) {\n      navigator\n        .share({\n          title: document.title,\n          text: message,\n          url: 'https://www.covid19india.org/essentials',\n        })\n        .then()\n        .catch((error) => {});\n    } else {\n      openSharingLink(message);\n    }\n  };\n  return (\n    <div className=\"Resources\" id=\"top-elem\">\n      <div className=\"filtersection\">\n        <div className=\"filtertitle\">\n          <h3>Service Before Self</h3>\n        </div>\n        {!isDesktop && (\n          <FiltersMobile\n            handleDisclaimerClick={handleDisclaimerClick}\n            popoverid={id}\n            isDisclaimerOpen={isDisclaimerOpen}\n            anchorEl={anchorEl}\n            handleDisclaimerClose={handleDisclaimerClose}\n            indianstate={indianstate}\n            changeIndianState={changeIndianState}\n            stateoptions={getIndianStateOptions()}\n            city={city}\n            changeCity={changeCity}\n            cityoptions={getCityOptions()}\n            category={category}\n            changeCategory={changeCategory}\n            servicesoptions={getCategoryOptions()}\n            filterTable={filterTable}\n            openSharingTray={openSharingTray}\n          />\n        )}\n        {isDesktop && (\n          <FiltersDesktop\n            handleDisclaimerClick={handleDisclaimerClick}\n            popoverid={id}\n            isDisclaimerOpen={isDisclaimerOpen}\n            anchorEl={anchorEl}\n            handleDisclaimerClose={handleDisclaimerClose}\n            indianstate={indianstate}\n            changeIndianState={changeIndianState}\n            stateoptions={getIndianStateOptions()}\n            city={city}\n            changeCity={changeCity}\n            cityoptions={getCityOptions()}\n            category={category}\n            changeCategory={changeCategory}\n            servicesoptions={getCategoryOptions()}\n            filterTable={filterTable}\n            openSharingTray={openSharingTray}\n          />\n        )}\n      </div>\n      {showTable && (\n        <React.Fragment>\n          <ResourceTable\n            columns={memocols}\n            data={partData}\n            totalCount={data.length}\n            isDesktop={isDesktop}\n            onScrollUpdate={appendData}\n            city={city}\n            category={category}\n            indianstate={indianstate}\n          />\n          <div>\n            <Fade in={hasScrolled}>\n              <Fab\n                color=\"inherit\"\n                aria-label=\"gototop\"\n                id=\"gototopbtn\"\n                onClick={animateScroll}\n                size=\"small\"\n                style={{\n                  position: 'fixed',\n                  bottom: '1rem',\n                  right: '1rem',\n                  zIndex: '1000',\n                }}\n              >\n                <Icon.Navigation2 strokeWidth=\"2.5\" color=\"#4c75f2\" />\n              </Fab>\n            </Fade>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default Resources;\n","import * as d3 from 'd3';\nimport React, {useEffect, useRef, useState} from 'react';\n\nfunction DeltaBarGraph({timeseries, arrayKey}) {\n  const [data, setData] = useState([]);\n  const svgRef = useRef();\n\n  useEffect(() => {\n    setData(timeseries);\n  }, [timeseries]);\n\n  useEffect(() => {\n    if (!data.length) return;\n\n    const svg = d3.select(svgRef.current);\n    const width = +svg.attr('width');\n    const height = +svg.attr('height');\n\n    const margin = {top: 50, right: 0, bottom: 50, left: 0};\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n    const barRadius = 5;\n\n    const formatTime = d3.timeFormat('%e %b');\n    const xScale = d3\n      .scaleBand()\n      .domain(data.map((d) => formatTime(d.date)))\n      .range([margin.left, chartRight])\n      .paddingInner(0.33);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([\n        0,\n        Math.max(\n          1,\n          d3.max(data, (d) => d[arrayKey])\n        ),\n      ])\n      .range([chartBottom, margin.top]); // - barRadius\n\n    const xAxis = d3.axisBottom(xScale).tickSize(0);\n\n    svg\n      .select('.x-axis')\n      .style('transform', `translateY(${chartBottom}px)`)\n      .call(xAxis)\n      .call((g) => g.select('.domain').remove())\n      .selectAll('text')\n      .attr('y', 0)\n      .attr('x', -40)\n      .attr('dy', '.35em')\n      .attr('transform', 'rotate(-90)')\n      .style('text-anchor', 'start');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .join('path')\n      .attr('class', 'bar')\n      .attr('d', (d) =>\n        roundedBar(\n          xScale(formatTime(d.date)),\n          chartBottom,\n          xScale.bandwidth(),\n          chartBottom - yScale(d[arrayKey]),\n          barRadius\n        )\n      )\n      .attr('fill', (d, i) => (i < data.length - 1 ? '#dc354590' : '#dc3545'));\n\n    svg\n      .selectAll('.delta')\n      .data(data)\n      .join('text')\n      .attr('class', 'delta')\n      .attr('text-anchor', 'middle')\n      .attr('font-size', '11px')\n      .attr('x', (d) => xScale(formatTime(d.date)) + xScale.bandwidth() / 2)\n      .attr('y', (d) => yScale(d[arrayKey]) - 6)\n      .text((d) => d[arrayKey])\n      .append('tspan')\n      .attr('class', 'percent')\n      .attr('x', (d) => xScale(formatTime(d.date)) + xScale.bandwidth() / 2)\n      .attr('dy', '-1.2em')\n      .text((d, i) =>\n        i && data[i - 1][arrayKey]\n          ? d3.format('+.1%')(\n              (data[i][arrayKey] - data[i - 1][arrayKey]) /\n                data[i - 1][arrayKey]\n            )\n          : ''\n      );\n  }, [data, arrayKey]);\n\n  return (\n    <div className=\"DeltaBarGraph fadeInUp\" style={{animationDelay: '0.8s'}}>\n      <svg\n        ref={svgRef}\n        width=\"250\"\n        height=\"250\"\n        viewBox=\"0 0 250 250\"\n        preserveAspectRatio=\"xMidYMid meet\"\n      >\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n    </div>\n  );\n}\n\nexport default React.memo(DeltaBarGraph, () => {\n  return true;\n});\n\nfunction roundedBar(x, y, w, h, r, f) {\n  if (!h) return;\n  // Flag for sweep:\n  if (f === undefined) f = 1;\n  // x coordinates of top of arcs\n  const x0 = x + r;\n  const x1 = x + w - r;\n  // y coordinates of bottom of arcs\n  const y0 = y - h + r;\n\n  const parts = [\n    'M',\n    x,\n    y,\n    'L',\n    x,\n    y0,\n    'A',\n    r,\n    r,\n    0,\n    0,\n    f,\n    x0,\n    y - h,\n    'L',\n    x1,\n    y - h,\n    'A',\n    r,\n    r,\n    0,\n    0,\n    f,\n    x + w,\n    y0,\n    'L',\n    x + w,\n    y,\n    'Z',\n  ];\n  return parts.join(' ');\n}\n","import {formatNumber} from '../utils/commonfunctions';\n\nimport React, {useState} from 'react';\nimport {useEffectOnce} from 'react-use';\n\nfunction Level(props) {\n  const [data, setData] = useState(props.data);\n\n  useEffectOnce(() => {\n    setData({\n      active: +props.data.active,\n      confirmed: +props.data.confirmed,\n      recovered: +props.data.recovered,\n      deaths: +props.data.deaths,\n      deltaconfirmed: +props.data.deltaconfirmed,\n      deltadeaths: +props.data.deltadeaths,\n      deltarecovered: +props.data.deltarecovered,\n    });\n  });\n\n  return (\n    <div className=\"Level\">\n      <div\n        className=\"level-item is-cherry fadeInUp\"\n        style={{animationDelay: '1s'}}\n      >\n        <h5>Confirmed</h5>\n        <h4>\n          [\n          {isNaN(data.deltaconfirmed)\n            ? ''\n            : data.deltaconfirmed > 0\n            ? '+' + formatNumber(data.deltaconfirmed)\n            : '+0'}\n          ]\n        </h4>\n        <h1>{formatNumber(data.confirmed)} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-blue fadeInUp\"\n        style={{animationDelay: '1.1s'}}\n      >\n        <h5 className=\"heading\">Active</h5>\n        <h4>&nbsp;</h4>\n        <h1 className=\"title has-text-info\">{formatNumber(data.active)}</h1>\n      </div>\n\n      <div\n        className=\"level-item is-green fadeInUp\"\n        style={{animationDelay: '1.2s'}}\n      >\n        <h5 className=\"heading\">Recovered</h5>\n        <h4>\n          [\n          {isNaN(data.deltarecovered)\n            ? ''\n            : data.deltarecovered > 0\n            ? '+' + formatNumber(data.deltarecovered)\n            : '+0'}\n          ]\n        </h4>\n        <h1 className=\"title has-text-success\">\n          {formatNumber(data.recovered)}{' '}\n        </h1>\n      </div>\n\n      <div\n        className=\"level-item is-gray fadeInUp\"\n        style={{animationDelay: '1.3s'}}\n      >\n        <h5 className=\"heading\">Deceased</h5>\n        <h4>\n          [\n          {isNaN(data.deltadeaths)\n            ? ''\n            : data.deltadeaths > 0\n            ? '+' + formatNumber(data.deltadeaths)\n            : '+0'}\n          ]\n        </h4>\n        <h1 className=\"title has-text-grey\">{formatNumber(data.deaths)}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Level);\n","/* Source: https://observablehq.com/@d3/color-legend */\n\nimport * as d3 from 'd3';\n\nfunction legend({\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n} = {}) {\n  const svg = d3\n    .create('svg')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', [0, 0, width, height])\n    .style('overflow', 'visible')\n    .style('display', 'block');\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    // d3.select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(\n        d3.quantize(d3.interpolate(marginLeft, width - marginRight), n)\n      );\n\n    svg\n      .append('image')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(\n          color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))\n        ).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .append('image')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL());\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = d3\n          .range(n)\n          .map((i) => d3.quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = d3.format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? d3.format(tickFormat)\n        : tickFormat;\n\n    x = d3\n      .scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = d3.range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    x = d3\n      .scaleBand()\n      .domain(color.domain())\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.domain())\n      .join('rect')\n      .attr('x', x)\n      .attr('y', marginTop)\n      .attr('width', Math.max(0, x.bandwidth() - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', color);\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .append('g')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .call(\n      d3\n        .axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .call(tickAdjust)\n    .call((g) => g.select('.domain').remove())\n    .call((g) =>\n      g\n        .append('text')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  const canvas = document.createElement('canvas');\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n\nexport default legend;\n","import legend from './legend';\n\nimport {MAP_TYPES} from '../constants';\nimport {formatNumber} from '../utils/commonfunctions';\n\nimport * as d3 from 'd3';\nimport React, {useCallback, useEffect, useRef, useState} from 'react';\nimport * as Icon from 'react-feather';\nimport * as topojson from 'topojson';\n\nconst propertyFieldMap = {\n  country: 'st_nm',\n  state: 'district',\n};\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  setHoveredRegion,\n  mapMeta,\n  changeMap,\n  selectedRegion,\n  setSelectedRegion,\n  isCountryLoaded,\n  mapOption,\n}) {\n  const choroplethMap = useRef(null);\n  const choroplethLegend = useRef(null);\n  const [svgRenderCount, setSvgRenderCount] = useState(0);\n\n  const ready = useCallback(\n    (geoData) => {\n      d3.selectAll('svg#chart > *').remove();\n\n      const propertyField = propertyFieldMap[mapMeta.mapType];\n      const svg = d3.select(choroplethMap.current);\n\n      const topology = topojson.feature(\n        geoData,\n        geoData.objects[mapMeta.graphObjectName]\n      );\n\n      const projection = d3.geoMercator();\n\n      // Set size of the map\n      let path;\n      let width;\n      let height;\n      if (!svg.attr('viewBox')) {\n        const widthStyle = parseInt(svg.style('width'));\n        if (isCountryLoaded) projection.fitWidth(widthStyle, topology);\n        else {\n          const heightStyle = parseInt(svg.style('height'));\n          projection.fitSize([widthStyle, heightStyle], topology);\n        }\n        path = d3.geoPath(projection);\n        const bBox = path.bounds(topology);\n        width = +bBox[1][0];\n        height = +bBox[1][1];\n        svg.attr('viewBox', `0 0 ${width} ${height}`);\n      }\n      const bBox = svg.attr('viewBox').split(' ');\n      width = +bBox[2];\n      height = +bBox[3];\n      projection.fitSize([width, height], topology);\n      path = d3.geoPath(projection);\n\n      /* Legend */\n      const svgLegend = d3.select(choroplethLegend.current);\n      svgLegend.selectAll('*').remove();\n      const colorInterpolator = (t) => {\n        switch (mapOption) {\n          case 'confirmed':\n            return d3.interpolateReds(t * 0.85);\n          case 'active':\n            return d3.interpolateBlues(t * 0.85);\n          case 'recovered':\n            return d3.interpolateGreens(t * 0.85);\n          case 'deceased':\n            return d3.interpolateGreys(t * 0.85);\n          default:\n            return;\n        }\n      };\n      const colorScale = d3.scaleSequential(\n        [0, Math.max(1, statistic[mapOption].max)],\n        colorInterpolator\n      );\n      // Colorbar\n      const widthLegend = parseInt(svgLegend.style('width'));\n      const margin = {left: 0.02 * widthLegend, right: 0.02 * widthLegend};\n      const barWidth = widthLegend - margin.left - margin.right;\n      const heightLegend = +svgLegend.attr('height');\n      svgLegend\n        .append('g')\n        .style('transform', `translateX(${margin.left}px)`)\n        .append(() =>\n          legend({\n            color: colorScale,\n            title:\n              mapOption.charAt(0).toUpperCase() + mapOption.slice(1) + ' Cases',\n            width: barWidth,\n            height: 0.8 * heightLegend,\n            ticks: 6,\n            tickFormat: function (d, i, n) {\n              if (!Number.isInteger(d)) return;\n              if (i === n.length - 1) return formatNumber(d) + '+';\n              return formatNumber(d);\n            },\n          })\n        );\n      svgLegend.attr('viewBox', `0 0 ${widthLegend} ${heightLegend}`);\n\n      /* Draw map */\n      let onceTouchedRegion = null;\n      const g = svg.append('g').attr('class', mapMeta.graphObjectName);\n      g.append('g')\n        .attr('class', 'states')\n        .selectAll('path')\n        .data(topology.features)\n        .join('path')\n        .attr('class', `path-region ${mapOption}`)\n        .attr('fill', function (d) {\n          const region = d.properties[propertyField];\n          const n = mapData[region] ? mapData[region][mapOption] : 0;\n          const color = n === 0 ? '#ffffff' : colorScale(n);\n          return color;\n        })\n        .attr('d', path)\n        .attr('pointer-events', 'all')\n        .on('mouseenter', (d) => {\n          handleMouseEnter(d.properties[propertyField]);\n        })\n        .on('mouseleave', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n        })\n        .on('touchstart', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n          else onceTouchedRegion = d;\n        })\n        .on('click', handleClick)\n        .style('cursor', 'pointer')\n        .append('title')\n        .text(function (d) {\n          const region = d.properties[propertyField];\n          const value = mapData[region] ? mapData[region][mapOption] : 0;\n          return (\n            Number(\n              parseFloat(\n                100 * (value / (statistic[mapOption].total || 0.001))\n              ).toFixed(2)\n            ).toString() +\n            '% from ' +\n            toTitleCase(region)\n          );\n        });\n\n      g.append('path')\n        .attr('class', 'borders')\n        .attr(\n          'stroke',\n          `${\n            mapOption === 'confirmed'\n              ? '#ff073a20'\n              : mapOption === 'active'\n              ? '#007bff20'\n              : mapOption === 'recovered'\n              ? '#28a74520'\n              : mapOption === 'deceased'\n              ? '#6c757d20'\n              : ''\n          }`\n        )\n        .attr('fill', 'none')\n        .attr('stroke-width', width / 250)\n        .attr(\n          'd',\n          path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName]))\n        );\n\n      const handleMouseEnter = (name) => {\n        try {\n          setSelectedRegion(name);\n          setHoveredRegion(name, mapMeta);\n        } catch (err) {\n          console.log('err', err);\n        }\n      };\n\n      function handleClick(d) {\n        d3.event.stopPropagation();\n        if (onceTouchedRegion || mapMeta.mapType === MAP_TYPES.STATE) return;\n        // Disable pointer events till the new map is rendered\n        svg.attr('pointer-events', 'none');\n        g.selectAll('.path-region').attr('pointer-events', 'none');\n        // Switch map\n        changeMap(d.properties[propertyField]);\n      }\n\n      // Reset on tapping outside map\n      svg.attr('pointer-events', 'auto').on('click', () => {\n        if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\n          setSelectedRegion(null);\n          setHoveredRegion('Total', mapMeta);\n        }\n      });\n    },\n    [\n      mapMeta,\n      statistic,\n      mapOption,\n      isCountryLoaded,\n      mapData,\n      setSelectedRegion,\n      setHoveredRegion,\n      changeMap,\n    ]\n  );\n\n  const toTitleCase = (str) => {\n    str = str.toLowerCase().split(' ');\n    for (let i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(' ');\n  };\n\n  useEffect(() => {\n    (async () => {\n      const data = await d3.json(mapMeta.geoDataFile);\n      if (statistic && choroplethMap.current) {\n        ready(data);\n        setSvgRenderCount((prevCount) => prevCount + 1);\n      }\n    })();\n  }, [mapMeta.geoDataFile, statistic, ready]);\n\n  useEffect(() => {\n    const highlightRegionInMap = (name) => {\n      const paths = d3.selectAll('.path-region');\n      paths.classed('map-hover', (d, i, nodes) => {\n        const propertyField =\n          'district' in d.properties\n            ? propertyFieldMap['state']\n            : propertyFieldMap['country'];\n        if (name === d.properties[propertyField]) {\n          nodes[i].parentNode.appendChild(nodes[i]);\n          return true;\n        }\n        return false;\n      });\n    };\n    highlightRegionInMap(selectedRegion);\n  }, [svgRenderCount, selectedRegion]);\n\n  return (\n    <div>\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\n        <svg\n          id=\"chart\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethMap}\n        ></svg>\n        {(mapOption === 'recovered' && mapData?.Unknown?.recovered) ||\n        (mapOption === 'deceased' && mapData?.Unknown?.deceased) ? (\n          <div className=\"disclaimer\">\n            <Icon.AlertCircle />\n            {`District-wise ${mapOption} numbers are under reconciliation`}\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n      <div\n        className=\"svg-parent legend fadeInUp\"\n        style={{animationDelay: '2.5s'}}\n      >\n        <svg\n          id=\"legend\"\n          height=\"65\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethLegend}\n        ></svg>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(ChoroplethMap);\n","import ChoroplethMap from './choropleth';\n\nimport {MAP_TYPES, MAP_META} from '../constants';\nimport {formatDate, formatNumber} from '../utils/commonfunctions';\n\nimport {formatDistance, format, parse} from 'date-fns';\nimport React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {Link} from 'react-router-dom';\nimport {useLocalStorage} from 'react-use';\n\nconst getRegionFromState = (state) => {\n  if (!state) return;\n  const region = {...state};\n  if (!region.name) region.name = region.state;\n  return region;\n};\n\nconst getRegionFromDistrict = (districtData, name) => {\n  if (!districtData) return;\n  const region = {...districtData};\n  if (!region.name) region.name = name;\n  return region;\n};\n\nfunction MapExplorer({\n  mapMeta,\n  states,\n  stateDistrictWiseData,\n  stateTestData,\n  regionHighlighted,\n  onMapHighlightChange,\n  isCountryLoaded,\n  anchor,\n  setAnchor,\n  mapOptionProp,\n}) {\n  const [selectedRegion, setSelectedRegion] = useState({});\n  const [panelRegion, setPanelRegion] = useState(getRegionFromState(states[0]));\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState(\n    getRegionFromState(states[0])\n  );\n  const [testObj, setTestObj] = useState({});\n  const [currentMap, setCurrentMap] = useState(mapMeta);\n  const [mapOption, setMapOption] = useLocalStorage('mapOption', 'active');\n  const [statistic, currentMapData] = useMemo(() => {\n    const dataTypes = ['confirmed', 'active', 'recovered', 'deceased'];\n    const statistic = dataTypes.reduce((acc, dtype) => {\n      acc[dtype] = {total: 0, max: 0};\n      return acc;\n    }, {});\n    let currentMapData = {};\n\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n      currentMapData = states.reduce((acc, state) => {\n        if (state.state === 'Total') {\n          return acc;\n        }\n        acc[state.state] = {};\n        dataTypes.forEach((dtype) => {\n          const typeCount = parseInt(\n            state[dtype !== 'deceased' ? dtype : 'deaths']\n          );\n          statistic[dtype].total += typeCount;\n          if (typeCount > statistic[dtype].max) {\n            statistic[dtype].max = typeCount;\n          }\n          acc[state.state][dtype] = typeCount;\n        });\n        return acc;\n      }, {});\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\n      const districtWiseData = (\n        stateDistrictWiseData[currentMap.name] || {districtData: {}}\n      ).districtData;\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\n        acc[district] = {};\n        dataTypes.forEach((dtype) => {\n          const typeCount = parseInt(districtWiseData[district][dtype]);\n          statistic[dtype].total += typeCount;\n          if (typeCount > statistic[dtype].max) {\n            statistic[dtype].max = typeCount;\n          }\n          acc[district][dtype] = typeCount;\n        });\n        return acc;\n      }, {});\n    }\n    return [statistic, currentMapData];\n  }, [currentMap, states, stateDistrictWiseData]);\n\n  const setHoveredRegion = useCallback(\n    (name, currentMap) => {\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n        const region = getRegionFromState(\n          states.find((state) => name === state.state)\n        );\n        setCurrentHoveredRegion(region);\n        setPanelRegion(region);\n        onMapHighlightChange(region);\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\n        const state = stateDistrictWiseData[currentMap.name] || {\n          districtData: {},\n        };\n        let districtData = state.districtData[name];\n        if (!districtData) {\n          districtData = {\n            confirmed: 0,\n            active: 0,\n            recovered: 0,\n            deaths: 0,\n          };\n        }\n        const currentHoveredRegion = getRegionFromDistrict(districtData, name);\n        const panelRegion = getRegionFromState(\n          states.find((state) => currentMap.name === state.state)\n        );\n        setPanelRegion(panelRegion);\n        currentHoveredRegion.statecode = panelRegion.statecode;\n        setCurrentHoveredRegion(currentHoveredRegion);\n        panelRegion.districtName = currentHoveredRegion.name;\n        if (onMapHighlightChange) onMapHighlightChange(panelRegion);\n      }\n    },\n    [states, stateDistrictWiseData, onMapHighlightChange]\n  );\n\n  useEffect(() => {\n    if (mapOptionProp) setMapOption(mapOptionProp);\n  }, [mapOptionProp, setMapOption]);\n\n  useEffect(() => {\n    if (regionHighlighted === undefined || regionHighlighted === null) return;\n\n    const isState = !('district' in regionHighlighted);\n    if (isState) {\n      const newMap = MAP_META['India'];\n      setCurrentMap(newMap);\n      const region = getRegionFromState(regionHighlighted.state);\n      setHoveredRegion(region.name, newMap);\n      setSelectedRegion(region.name);\n    } else {\n      const newMap = MAP_META[regionHighlighted.state.state];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setHoveredRegion(regionHighlighted.district, newMap);\n      setSelectedRegion(regionHighlighted.district);\n    }\n  }, [regionHighlighted, setHoveredRegion]);\n\n  const switchMapToState = useCallback(\n    (name) => {\n      const newMap = MAP_META[name];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setSelectedRegion(null);\n      if (newMap.mapType === MAP_TYPES.COUNTRY) {\n        setHoveredRegion(states[0].state, newMap);\n      } else if (newMap.mapType === MAP_TYPES.STATE) {\n        const {districtData} = stateDistrictWiseData[name] || {\n          districtData: {},\n        };\n        const topDistrict = Object.keys(districtData)\n          .filter((name) => name !== 'Unknown')\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        setHoveredRegion(topDistrict, newMap);\n        setSelectedRegion(topDistrict);\n      }\n    },\n    [setHoveredRegion, stateDistrictWiseData, states]\n  );\n\n  useEffect(() => {\n    setTestObj(\n      stateTestData.find(\n        (obj) => obj.state === panelRegion.name && obj.totaltested !== ''\n      )\n    );\n  }, [panelRegion, stateTestData, testObj]);\n\n  return (\n    <div\n      className={`MapExplorer fadeInUp ${\n        anchor === 'mapexplorer' ? 'stickied' : ''\n      }`}\n      style={{\n        animationDelay: '1.5s',\n        display: anchor === 'timeseries' ? 'none' : '',\n      }}\n    >\n      {window.innerWidth > 769 && (\n        <div\n          className={`anchor ${anchor === 'mapexplorer' ? 'stickied' : ''}`}\n          onClick={() => {\n            setAnchor(anchor === 'mapexplorer' ? null : 'mapexplorer');\n          }}\n        >\n          <Icon.Anchor />\n        </div>\n      )}\n      <div className=\"header\">\n        <h1>{currentMap.name} Map</h1>\n        <h6>\n          {window.innerWidth <= 769 ? 'Tap' : 'Hover'} over a{' '}\n          {currentMap.mapType === MAP_TYPES.COUNTRY ? 'state/UT' : 'district'}{' '}\n          for more details\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        <div\n          className={`stats fadeInUp ${\n            mapOption === 'confirmed' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2s'}}\n          onClick={() => setMapOption('confirmed')}\n        >\n          <h5>{window.innerWidth <= 769 ? 'Cnfmd' : 'Confirmed'}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.confirmed)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltaconfirmed)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className={`stats is-blue fadeInUp ${\n            mapOption === 'active' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2.1s'}}\n          onClick={() => setMapOption('active')}\n        >\n          <h5>{window.innerWidth <= 769 ? 'Actv' : 'Active'}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.active)}</h1>\n            <h6>{` `}</h6>\n          </div>\n        </div>\n\n        <div\n          className={`stats is-green fadeInUp ${\n            mapOption === 'recovered' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2.2s'}}\n          onClick={() => setMapOption('recovered')}\n        >\n          <h5>{window.innerWidth <= 769 ? 'Rcvrd' : 'Recovered'}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.recovered)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltarecovered)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className={`stats is-gray fadeInUp ${\n            mapOption === 'deceased' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2.3s'}}\n          onClick={() => setMapOption('deceased')}\n        >\n          <h5>{window.innerWidth <= 769 ? 'Dcsd' : 'Deceased'}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.deaths)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltadeaths)}`}</h6>\n          </div>\n        </div>\n\n        {\n          <div\n            className=\"stats is-purple tested fadeInUp\"\n            style={{animationDelay: '2.4s'}}\n          >\n            <h5>{window.innerWidth <= 769 ? 'Tested' : 'Tested'}</h5>\n            <div className=\"stats-bottom\">\n              <h1>{formatNumber(testObj?.totaltested)}</h1>\n            </div>\n            <h6 className=\"timestamp\">\n              {!isNaN(parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()))\n                ? `As of ${format(\n                    parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()),\n                    'dd MMM'\n                  )}`\n                : ''}\n            </h6>\n            {testObj?.totaltested?.length > 1 && (\n              <a href={testObj.source} target=\"_noblank\">\n                <Icon.Link />\n              </a>\n            )}\n          </div>\n        }\n      </div>\n\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\n        <h2 className={`${mapOption !== 'confirmed' ? mapOption : ''}`}>\n          {currentHoveredRegion.name}\n        </h2>\n        {currentHoveredRegion.lastupdatedtime && (\n          <div className=\"last-update\">\n            <h6>Last updated</h6>\n            <h3>\n              {isNaN(\n                Date.parse(formatDate(currentHoveredRegion.lastupdatedtime))\n              )\n                ? ''\n                : formatDistance(\n                    new Date(formatDate(currentHoveredRegion.lastupdatedtime)),\n                    new Date()\n                  ) + ' ago'}\n            </h3>\n          </div>\n        )}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentHoveredRegion.name !== currentMap.name ? (\n          <h1\n            className={`district ${mapOption !== 'confirmed' ? mapOption : ''}`}\n          >\n            {currentMapData[currentHoveredRegion.name]\n              ? currentMapData[currentHoveredRegion.name][mapOption]\n              : 0}\n            <br />\n            <span style={{fontSize: '0.75rem', fontWeight: 600}}>\n              {mapOption}\n            </span>\n          </h1>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown &&\n        currentMapData.Unknown[mapOption] > 0 ? (\n          <h4 className=\"unknown\">\n            Districts unknown for {currentMapData.Unknown[mapOption]} people\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState('India')}\n          >\n            Back\n          </div>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <Link to={`state/${currentHoveredRegion.statecode}`}>\n            <div className=\"button state-page-button\">\n              <abbr>Visit state page</abbr>\n              <Icon.ArrowRightCircle />\n            </div>\n          </Link>\n        ) : null}\n      </div>\n\n      {mapOption && (\n        <ChoroplethMap\n          statistic={statistic}\n          mapMeta={currentMap}\n          mapData={currentMapData}\n          setHoveredRegion={setHoveredRegion}\n          changeMap={switchMapToState}\n          selectedRegion={selectedRegion}\n          setSelectedRegion={setSelectedRegion}\n          isCountryLoaded={isCountryLoaded}\n          mapOption={mapOption}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(MapExplorer);\n","import * as d3 from 'd3';\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\n\nfunction Minigraph({timeseries}) {\n  const [timeSeriesData, setTimeSeriesData] = useState([]);\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n\n  useEffect(() => {\n    setTimeSeriesData(timeseries.slice(timeseries.length - 20));\n  }, [timeseries]);\n\n  const graphData = useCallback((data) => {\n    if (data.length <= 1) return 0;\n\n    const margin = {top: 10, right: 5, bottom: 20, left: 5};\n    const chartRight = 100 - margin.right;\n    const chartBottom = 100 - margin.bottom;\n\n    const svg1 = d3.select(svgRef1.current);\n    const svg2 = d3.select(svgRef2.current);\n    const svg3 = d3.select(svgRef3.current);\n    const svg4 = d3.select(svgRef4.current);\n\n    data.forEach((d) => {\n      d['dailyactive'] = d.dailyconfirmed - d.dailyrecovered - d.dailydeceased;\n    });\n\n    const xScale = d3\n      .scaleTime()\n      .domain(d3.extent(data, (d) => d.date))\n      .range([margin.left, chartRight]);\n\n    const svgArray = [svg1, svg2, svg3, svg4];\n    const dataTypes = [\n      'dailyconfirmed',\n      'dailyactive',\n      'dailyrecovered',\n      'dailydeceased',\n    ];\n    const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d'];\n\n    const dailyMin = d3.min(data, (d) => d.dailyactive);\n    const dailyMax = d3.max(data, (d) =>\n      Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n    );\n    const domainMinMax = Math.max(-dailyMin, dailyMax);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([-domainMinMax, domainMinMax])\n      .range([chartBottom, margin.top]);\n\n    svgArray.forEach((svg, i) => {\n      const type = dataTypes[i];\n      const color = colors[i];\n\n      const path = svg\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', color + '99')\n        .attr('stroke-width', 2.5)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x((d) => xScale(d.date))\n            .y((d) => yScale(d[type]))\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength = path.node().getTotalLength();\n      path\n        .attr('stroke-dasharray', totalLength + ' ' + totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .attr('stroke-dashoffset', 0);\n\n      svg\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', color)\n        .attr('stroke', color)\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', (d) => xScale(d.date))\n        .attr('cy', (d) => yScale(d[type]))\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .style('opacity', 1);\n    });\n  }, []);\n\n  useEffect(() => {\n    graphData(timeSeriesData);\n  }, [timeSeriesData, graphData]);\n\n  return (\n    <div className=\"Minigraph\">\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '1.4s'}}>\n        <svg\n          ref={svgRef1}\n          width=\"100\"\n          height=\"75\"\n          viewBox=\"0 0 100 75\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-blue fadeInUp\"\n        style={{animationDelay: '1.5s'}}\n      >\n        <svg\n          ref={svgRef2}\n          width=\"100\"\n          height=\"75\"\n          viewBox=\"0 0 100 75\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-green fadeInUp\"\n        style={{animationDelay: '1.6s'}}\n      >\n        <svg\n          ref={svgRef3}\n          width=\"100\"\n          height=\"75\"\n          viewBox=\"0 0 100 75\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-gray fadeInUp\"\n        style={{animationDelay: '1.7s'}}\n      >\n        <svg\n          ref={svgRef4}\n          width=\"100\"\n          height=\"75\"\n          viewBox=\"0 0 100 75\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Minigraph);\n","import {sliceTimeseriesFromEnd, formatNumber} from '../utils/commonfunctions';\nimport {useResizeObserver} from '../utils/hooks';\n\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\n\nfunction TimeSeries(props) {\n  const [lastDaysCount, setLastDaysCount] = useState(\n    window.innerWidth > 512 ? Infinity : 30\n  );\n  const [timeseries, setTimeseries] = useState([]);\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(0);\n  const [mode, setMode] = useState(props.mode);\n  const [logMode, setLogMode] = useState(props.logMode);\n  const [chartType, setChartType] = useState(props.type);\n  const [stateCode] = useState(props.stateCode);\n  const [moving, setMoving] = useState(false);\n\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const transformTimeSeries = useCallback(\n    (timeseries) => {\n      if (timeseries.length > 1) {\n        const slicedTimeseries = sliceTimeseriesFromEnd(\n          timeseries,\n          lastDaysCount\n        );\n        setIndex(slicedTimeseries.length - 1);\n        setTimeseries(slicedTimeseries);\n      }\n    },\n    [lastDaysCount]\n  );\n\n  useEffect(() => {\n    transformTimeSeries(props.timeseries);\n  }, [stateCode, lastDaysCount, transformTimeSeries, props.timeseries]);\n\n  useEffect(() => {\n    setMode(props.mode);\n  }, [props.mode]);\n\n  useEffect(() => {\n    setLogMode(props.logMode);\n  }, [props.logMode]);\n\n  useEffect(() => {\n    setChartType(props.type);\n  }, [props.type]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      if (!dimensions) return;\n      const width = dimensions.width;\n      const height = dimensions.height;\n\n      // Margins\n      const margin = {top: 15, right: 35, bottom: 25, left: 25};\n      const chartRight = width - margin.right;\n      const chartBottom = height - margin.bottom;\n\n      const T = timeseries.length;\n      const yBuffer = 1.1;\n\n      setDatapoint(timeseries[T - 1]);\n      setIndex(T - 1);\n\n      const svg1 = d3.select(svgRef1.current);\n      const svg2 = d3.select(svgRef2.current);\n      const svg3 = d3.select(svgRef3.current);\n      const svg4 = d3.select(svgRef4.current);\n\n      const dateMin = new Date(timeseries[0]['date']);\n      dateMin.setDate(dateMin.getDate() - 1);\n      const dateMax = new Date(timeseries[T - 1]['date']);\n      dateMax.setDate(dateMax.getDate() + 1);\n\n      const xScale = d3\n        .scaleTime()\n        .clamp(true)\n        .domain([dateMin, dateMax])\n        .range([margin.left, chartRight]);\n\n      // Number of x-axis ticks\n      const numTicksX = width < 480 ? 4 : 7;\n\n      const xAxis = (g) =>\n        g\n          .attr('class', 'x-axis')\n          .call(d3.axisBottom(xScale).ticks(numTicksX))\n          .style('transform', `translateY(${chartBottom}px)`);\n\n      const xAxis2 = (g, yScale) => {\n        g.attr('class', 'x-axis2')\n          .call(d3.axisBottom(xScale).tickValues([]).tickSize(0))\n          .select('.domain')\n          .style('transform', `translateY(${yScale(0)}px)`);\n\n        if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);\n        else g.select('.domain').attr('opacity', 0);\n      };\n\n      const yAxis = (g, yScale) =>\n        g\n          .attr('class', 'y-axis')\n          .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(5))\n          .style('transform', `translateX(${chartRight}px)`);\n\n      // Arrays of objects\n      const svgArray = [svg1, svg2, svg3, svg4];\n      const plotTotal = chartType === 1;\n      const dataTypesTotal = [\n        'totalconfirmed',\n        'totalactive',\n        'totalrecovered',\n        'totaldeceased',\n      ];\n      const dataTypesDaily = [\n        'dailyconfirmed',\n        'dailyactive',\n        'dailyrecovered',\n        'dailydeceased',\n      ];\n\n      const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d'];\n\n      let yScales;\n      if (plotTotal) {\n        let uniformScaleMin = Infinity;\n        dataTypesTotal.forEach((type) => {\n          uniformScaleMin = Math.min(\n            uniformScaleMin,\n            d3.min(timeseries, (d) => d[type])\n          );\n        });\n        const yScaleUniformLinear = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            uniformScaleMin,\n            Math.max(1, yBuffer * d3.max(timeseries, (d) => d.totalconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        const yScaleUniformLog = d3\n          .scaleLog()\n          .clamp(true)\n          .domain([\n            Math.max(1, uniformScaleMin),\n            Math.max(1, yBuffer * d3.max(timeseries, (d) => d.totalconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesTotal.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              d3.min(timeseries, (d) => d[type]),\n              Math.max(1, yBuffer * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          const yScaleLog = d3\n            .scaleLog()\n            .clamp(true)\n            .domain([\n              Math.max(\n                1,\n                d3.min(timeseries, (d) => d[type])\n              ),\n              Math.max(1, yBuffer * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          if (logMode) return mode ? yScaleUniformLog : yScaleLog;\n          else return mode ? yScaleUniformLinear : yScaleLinear;\n        });\n      } else {\n        const yScaleDailyUniform = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            yBuffer *\n              Math.min(\n                0,\n                d3.min(timeseries, (d) => d.dailyactive)\n              ),\n            Math.max(\n              1,\n              yBuffer *\n                d3.max(timeseries, (d) =>\n                  Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n                )\n            ),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesDaily.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              yBuffer *\n                Math.min(\n                  0,\n                  d3.min(timeseries, (d) => d[type])\n                ),\n              Math.max(1, yBuffer * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          return mode ? yScaleDailyUniform : yScaleLinear;\n        });\n      }\n\n      /* Focus dots */\n      const focus = svgArray.map((svg, i) => {\n        return svg\n          .selectAll('.focus')\n          .data([timeseries[T - 1]], (d) => d.date)\n          .join('circle')\n          .attr('class', 'focus')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('r', 4);\n      });\n\n      function mousemove() {\n        const xm = d3.mouse(this)[0];\n        const date = xScale.invert(xm);\n        const bisectDate = d3.bisector((d) => d.date).left;\n        let i = bisectDate(timeseries, date, 1);\n        if (0 <= i && i < T) {\n          if (date - timeseries[i - 1].date < timeseries[i].date - date) --i;\n          setDatapoint(timeseries[i]);\n          setIndex(i);\n          setMoving(true);\n          const d = timeseries[i];\n          focus.forEach((f, j) => {\n            const yScale = yScales[j];\n            const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n            f.attr('cx', xScale(d.date)).attr('cy', yScale(d[type]));\n          });\n        }\n      }\n\n      function mouseout() {\n        setDatapoint(timeseries[T - 1]);\n        setIndex(T - 1);\n        setMoving(false);\n        focus.forEach((f, j) => {\n          const yScale = yScales[j];\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n          f.attr('cx', xScale(timeseries[T - 1].date)).attr(\n            'cy',\n            yScale(timeseries[T - 1][type])\n          );\n        });\n      }\n\n      /* Begin drawing charts */\n      svgArray.forEach((svg, i) => {\n        // Transition interval\n        const t = svg.transition().duration(500);\n        const typeTotal = dataTypesTotal[i];\n        const typeDaily = dataTypesDaily[i];\n        const type = plotTotal ? typeTotal : typeDaily;\n\n        const color = colors[i];\n        const yScale = yScales[i];\n\n        /* X axis */\n        svg.select('.x-axis').transition(t).call(xAxis);\n        svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\n        /* Y axis */\n        svg.select('.y-axis').transition(t).call(yAxis, yScale);\n\n        /* Path dots */\n        svg\n          .selectAll('.dot')\n          .data(timeseries, (d) => d.date)\n          .join((enter) => enter.append('circle').attr('cy', chartBottom))\n          .attr('class', 'dot')\n          .attr('fill', color)\n          .attr('stroke', color)\n          .attr('r', 2)\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        focus[i]\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        if (plotTotal) {\n          /* TOTAL TRENDS */\n          svg.selectAll('.stem').remove();\n          const path = svg\n            .selectAll('.trend')\n            .data([[...timeseries].reverse()])\n            .join('path')\n            .attr('class', 'trend')\n            .attr('fill', 'none')\n            .attr('stroke', color + '99')\n            .attr('stroke-width', 4);\n          // HACK\n          // Path interpolation is non-trivial. Ideally, a custom path tween\n          // function should be defined which takes care that old path dots\n          // transition synchronously along with the path transition. This hack\n          // simulates that behaviour.\n          if (path.attr('d')) {\n            const n = path.node().getTotalLength();\n            const p = path.node().getPointAtLength(n);\n            // Append points at end of path for better interpolation\n            path.attr(\n              'd',\n              () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T)\n            );\n          }\n          path\n            .transition(t)\n            .attr('opacity', plotTotal ? 1 : 0)\n            .attr(\n              'd',\n              d3\n                .line()\n                .x((d) => xScale(d.date))\n                .y((d) => yScale(d[typeTotal]))\n                .curve(d3.curveMonotoneX)\n            );\n          // Using d3-interpolate-path\n          // .attrTween('d', function (d) {\n          //   var previous = path.attr('d');\n          //   var current = line(d);\n          //   return interpolatePath(previous, current);\n          // });\n        } else {\n          /* DAILY TRENDS */\n          svg.selectAll('.trend').remove();\n          svg\n            .selectAll('.stem')\n            .data(timeseries, (d) => d.date)\n            .join((enter) =>\n              enter\n                .append('line')\n                .attr('x1', (d) => xScale(d.date))\n                .attr('x2', (d) => xScale(d.date))\n                .attr('y1', chartBottom)\n                .attr('y2', chartBottom)\n            )\n            .attr('class', 'stem')\n            .style('stroke', color + '99')\n            .style('stroke-width', 4)\n            .transition(t)\n            .attr('y1', yScale(0))\n            .attr('x1', (d) => xScale(d.date))\n            .attr('x2', (d) => xScale(d.date))\n            .attr('y2', (d) => yScale(d[typeDaily]));\n        }\n\n        svg\n          .on('mousemove', mousemove)\n          .on('touchmove', mousemove)\n          .on('mouseout', mouseout)\n          .on('touchend', mouseout);\n      });\n    },\n    [dimensions, chartType, logMode, mode]\n  );\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n\n  const focusDate = moment(datapoint.date).utcOffset('+05:30');\n  let dateStr = focusDate.format('DD MMMM');\n  dateStr += focusDate.isSame(\n    moment().utcOffset('+05:30').subtract(1, 'days'),\n    'day'\n  )\n    ? ' Yesterday'\n    : '';\n\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\n  const chartKey2 = chartType === 1 ? 'totalactive' : 'dailyactive';\n  const chartKey3 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\n  const chartKey4 = chartType === 1 ? 'totaldeceased' : 'dailydeceased';\n\n  // Function for calculate increased/decreased count for each type of data\n  const currentStatusCount = (chartType) => {\n    if (timeseries.length <= 0 || index <= 0 || index >= timeseries.length)\n      return '';\n    const currentDiff =\n      timeseries[index][chartType] - timeseries[index - 1][chartType];\n    const formatedDiff = formatNumber(currentDiff);\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"TimeSeries fadeInUp\" style={{animationDelay: '2.7s'}}>\n        <div className=\"svg-parent\" ref={wrapperRef}>\n          <div className=\"stats\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Confirmed</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey1])}</h2>\n              <h6>{currentStatusCount(chartKey1)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef1} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-blue\">\n          <div className=\"stats is-blue\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Active</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey2])}</h2>\n              <h6>{currentStatusCount(chartKey2)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef2} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Recovered</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey3])}</h2>\n              <h6>{currentStatusCount(chartKey3)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef3} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Deceased</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey4])}</h2>\n              <h6>{currentStatusCount(chartKey4)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef4} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n      </div>\n\n      <div className=\"pills\">\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(Infinity)}\n          className={lastDaysCount === Infinity ? 'selected' : ''}\n        >\n          Beginning\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(30)}\n          className={lastDaysCount === 30 ? 'selected' : ''}\n          aria-label=\"1 month\"\n        >\n          1 Month\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(14)}\n          className={lastDaysCount === 14 ? 'selected' : ''}\n          aria-label=\"14 days\"\n        >\n          2 Weeks\n        </button>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(TimeSeries);\n","import {ResizeObserver} from '@juggle/resize-observer';\nimport {useState, useEffect} from 'react';\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n","// import Clusters from './clusters';\nimport DeltaBarGraph from './deltabargraph';\nimport Footer from './footer';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport TimeSeries from './timeseries';\n\nimport { MAP_META, STATE_CODES } from '../constants';\nimport {\n  formatDateAbsolute,\n  formatNumber,\n  parseStateTimeseries,\n} from '../utils/commonfunctions';\n\nimport anime from 'animejs';\nimport axios from 'axios';\nimport { format, parse } from 'date-fns';\nimport React, { useRef, useState } from 'react';\nimport * as Icon from 'react-feather';\nimport { Link } from 'react-router-dom';\nimport { useMeasure, useEffectOnce } from 'react-use';\n\nfunction State(props) {\n  const mapRef = useRef();\n  const tsRef = useRef();\n\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState({});\n  const [graphOption, setGraphOption] = useState(1);\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\n  const [stateData, setStateData] = useState({});\n  const [testData, setTestData] = useState({});\n  const [sources, setSources] = useState({});\n  const [districtData, setDistrictData] = useState({});\n  const [stateName] = useState(STATE_CODES['CT']);\n  const [mapOption, setMapOption] = useState('confirmed');\n  const [mapSwitcher, { width }] = useMeasure();\n\n  useEffectOnce(() => {\n    getState('CT');\n  });\n\n  const getState = async (code) => {\n    try {\n      const [\n        { data: dataResponse },\n        { data: stateDistrictWiseResponse },\n        { data: statesDailyResponse },\n        { data: stateTestResponse },\n        { data: sourcesResponse },\n      ] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\n        axios.get('https://api.covid19india.org/states_daily.json'),\n        axios.get('https://api.covid19india.org/state_test_data.json'),\n        axios.get('https://api.covid19india.org/sources_list.json'),\n      ]);\n      const states = dataResponse.statewise;\n      setStateData(states.find((s) => s.statecode === code));\n      const ts = parseStateTimeseries(statesDailyResponse)[code];\n      setTimeseries(ts);\n      const statesTests = stateTestResponse.states_tested_data;\n      const name = STATE_CODES[code];\n      setTestData(\n        statesTests.filter(\n          (obj) => obj.state === name && obj.totaltested !== ''\n        )\n      );\n      setDistrictData({\n        [name]: stateDistrictWiseResponse[name],\n      });\n      const sourceList = sourcesResponse.sources_list;\n      setSources(sourceList.filter((state) => state.statecode === code));\n      setFetched(true);\n      anime({\n        targets: '.highlight',\n        duration: 200,\n        delay: 3000,\n        translateX:\n          mapOption === 'confirmed'\n            ? `${width * 0}px`\n            : mapOption === 'active'\n              ? `${width * 0.25}px`\n              : mapOption === 'recovered'\n                ? `${width * 0.5}px`\n                : mapOption === 'deceased'\n                  ? `${width * 0.75}px`\n                  : '0px',\n        easing: 'spring(1, 80, 90, 10)',\n        opacity: 1,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const testObjLast = testData[testData.length - 1];\n\n  return (\n    <React.Fragment>\n      <div className=\"State\">\n        <div className=\"state-left\">\n          {/* <div className=\"breadcrumb fadeInUp\">\n            <Link to=\"/\">Home</Link>/\n            <Link to={`${}`}>{stateName}</Link>\n          </div> */}\n\n          <div className=\"header\">\n            <div\n              className=\"header-left fadeInUp\"\n              style={{ animationDelay: '0.3s' }}\n            >\n              <h1>{stateName}</h1>\n              <h5>\n                Last Updated on{' '}\n                {Object.keys(stateData).length\n                  ? formatDateAbsolute(stateData.lastupdatedtime)\n                  : ''}\n              </h5>\n            </div>\n\n            <div\n              className=\"header-right fadeInUp\"\n              style={{ animationDelay: '0.5s' }}\n            >\n              <h5>Tested</h5>\n              <h2>{formatNumber(testObjLast?.totaltested)}</h2>\n              <h5 className=\"timestamp\">\n                {!isNaN(parse(testObjLast?.updatedon, 'dd/MM/yyyy', new Date()))\n                  ? `As of ${format(\n                    parse(testObjLast?.updatedon, 'dd/MM/yyyy', new Date()),\n                    'dd MMM'\n                  )}`\n                  : ''}\n              </h5>\n              <h5>\n                {'per '}\n                {testObjLast?.totaltested && (\n                  <a href={testObjLast.source} target=\"_noblank\">\n                    source\n                  </a>\n                )}\n              </h5>\n            </div>\n          </div>\n\n          {fetched && (\n            <div className=\"map-switcher\" ref={mapSwitcher}>\n              <div\n                className={`highlight ${mapOption}`}\n                style={{\n                  transform: `translateX(${width * 0}px)`,\n                  opacity: 0,\n                }}\n              ></div>\n              <div\n                className=\"clickable\"\n                onClick={() => {\n                  setMapOption('confirmed');\n                  anime({\n                    targets: '.highlight',\n                    translateX: `${width * 0}px`,\n                    easing: 'spring(1, 80, 90, 10)',\n                  });\n                }}\n              ></div>\n              <div\n                className=\"clickable\"\n                onClick={() => {\n                  setMapOption('active');\n                  anime({\n                    targets: '.highlight',\n                    translateX: `${width * 0.25}px`,\n                    easing: 'spring(1, 80, 90, 10)',\n                  });\n                }}\n              ></div>\n              <div\n                className=\"clickable\"\n                onClick={() => {\n                  setMapOption('recovered');\n                  anime({\n                    targets: '.highlight',\n                    translateX: `${width * 0.5}px`,\n                    easing: 'spring(1, 80, 90, 10)',\n                  });\n                }}\n              ></div>\n              <div\n                className=\"clickable\"\n                onClick={() => {\n                  setMapOption('deceased');\n                  anime({\n                    targets: '.highlight',\n                    translateX: `${width * 0.75}px`,\n                    easing: 'spring(1, 80, 90, 10)',\n                  });\n                }}\n              ></div>\n            </div>\n          )}\n\n          {fetched && <Level data={stateData} />}\n          {fetched && <Minigraph timeseries={timeseries} />}\n          {fetched && (\n            <React.Fragment>\n              {\n                <MapExplorer\n                  forwardRef={mapRef}\n                  mapMeta={MAP_META[stateName]}\n                  states={[stateData]}\n                  stateDistrictWiseData={districtData}\n                  stateTestData={testData}\n                  isCountryLoaded={false}\n                  mapOptionProp={mapOption}\n                />\n              }\n            </React.Fragment>\n          )}\n\n          {fetched && (\n            <div className=\"meta-secondary\">\n              <div className=\"unknown\">\n                <Icon.AlertCircle />\n                <div className=\"unknown-right\">\n                  Awaiting district details for{' '}\n                  {districtData[stateName]?.districtData['Unknown']\n                    ?.confirmed || '0'}{' '}\n                  cases\n                </div>\n              </div>\n              <div className=\"sources\">\n                <Icon.Compass />\n                <div className=\"sources-right\">\n                  Data collected from sources{' '}\n                  {sources.length > 0\n                    ? Object.keys(sources[0]).map((key, index) => {\n                      if (key.match('source') && sources[0][key] !== '') {\n                        const num = key.match(/\\d+/);\n                        return (\n                          <React.Fragment key={index}>\n                            {num > 1 ? ',' : ''}\n                            <a href={sources[0][key]}>{num}</a>\n                          </React.Fragment>\n                        );\n                      }\n                      return null;\n                    })\n                    : ''}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"state-right\">\n          {fetched && (\n            <React.Fragment>\n              <div className=\"district-bar\">\n                <div\n                  className=\"district-bar-left fadeInUp\"\n                  style={{ animationDelay: '0.6s' }}\n                >\n                  <h2>Top districts</h2>\n                  <div className=\"districts\">\n                    {districtData[stateName]\n                      ? Object.keys(districtData[stateName].districtData)\n                        .filter((d) => d !== 'Unknown')\n                        .sort(\n                          (a, b) =>\n                            districtData[stateName].districtData[b]\n                              .confirmed -\n                            districtData[stateName].districtData[a].confirmed\n                        )\n                        .slice(0, 6)\n                        .map((district, index) => {\n                          return (\n                            <div key={index} className=\"district\">\n                              <h2>\n                                {\n                                  districtData[stateName].districtData[\n                                    district\n                                  ].confirmed\n                                }\n                              </h2>\n                              <h5>{district}</h5>\n                              <div className=\"delta\">\n                                <Icon.ArrowUp />\n                                <h6>\n                                  {\n                                    districtData[stateName].districtData[\n                                      district\n                                    ].delta.confirmed\n                                  }\n                                </h6>\n                              </div>\n                            </div>\n                          );\n                        })\n                      : ''}\n                  </div>\n                </div>\n                <div className=\"district-bar-right\">\n                  {\n                    <DeltaBarGraph\n                      timeseries={timeseries.slice(-5)}\n                      arrayKey={'dailyconfirmed'}\n                    />\n                  }\n                </div>\n              </div>\n\n              {false && (\n                <Link to=\"/essentials\">\n                  <div\n                    className=\"to-essentials fadeInUp\"\n                    style={{ animationDelay: '0.9s' }}\n                  >\n                    <h2>Go to essentials</h2>\n                    <Icon.ArrowRightCircle />\n                  </div>\n                </Link>\n              )}\n\n              <div\n                className=\"timeseries-header fadeInUp\"\n                style={{ animationDelay: '2.5s' }}\n                ref={tsRef}\n              >\n                <div className=\"tabs\">\n                  <div\n                    className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(1);\n                    }}\n                  >\n                    <h4>Cumulative</h4>\n                  </div>\n                  <div\n                    className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(2);\n                    }}\n                  >\n                    <h4>Daily</h4>\n                  </div>\n                </div>\n\n                <div className=\"scale-modes\">\n                  <label className=\"main\">Scale Modes</label>\n                  <div className=\"timeseries-mode\">\n                    <label htmlFor=\"timeseries-mode\">Uniform</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={timeseriesMode}\n                      className=\"switch\"\n                      aria-label=\"Checked by default to scale uniformly.\"\n                      onChange={(event) => {\n                        setTimeseriesMode(!timeseriesMode);\n                      }}\n                    />\n                  </div>\n                  <div\n                    className={`timeseries-logmode ${\n                      graphOption !== 1 ? 'disabled' : ''\n                      }`}\n                  >\n                    <label htmlFor=\"timeseries-logmode\">Logarithmic</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={graphOption === 1 && timeseriesLogMode}\n                      className=\"switch\"\n                      disabled={graphOption !== 1}\n                      onChange={(event) => {\n                        setTimeseriesLogMode(!timeseriesLogMode);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <TimeSeries\n                timeseries={timeseries}\n                type={graphOption}\n                mode={timeseriesMode}\n                logMode={timeseriesLogMode}\n              />\n            </React.Fragment>\n          )}\n        </div>\n\n        {/* <div className=\"state-left\">\n          <div className=\"Clusters fadeInUp\" style={{animationDelay: '0.8s'}}>\n            <h1>Network of Transmission</h1>\n            <Clusters stateCode={'CT'} />\n          </div>\n        </div> */}\n\n        <div className=\"state-right\"></div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(State);\n","import {useEffect} from 'react';\nimport {useLocation} from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const {pathname} = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import ReactGA from 'react-ga';\n\nimport './App.scss';\n\nimport DeepDive from './components/deepdive';\nimport FAQ from './components/faq';\nimport Navbar from './components/navbar';\nimport PatientDB from './components/patientdb';\nimport Resources from './components/resources';\nimport State from './components/state';\nimport ScrollToTop from './utils/ScrollToTop';\n\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport { useLocalStorage } from 'react-use';\n\nconst PUBLIC_URL = process.env.PUBLIC_URL;\n\nfunction initializeTracking() {\n  console.log(window.location.pathname + window.location.search);\n  \n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\nfunction App() {\n  const pages = [\n    {\n      pageLink: `${PUBLIC_URL}/`,\n      view: State,\n      displayName: 'Home',\n      animationDelayForNavbar: 0.2,\n      showInNavbar: true,\n    },\n    {\n      pageLink: `${PUBLIC_URL}/demographics`,\n      view: PatientDB,\n      displayName: 'Demographics',\n      animationDelayForNavbar: 0.3,\n      showInNavbar: false,\n    },\n    {\n      pageLink: `${PUBLIC_URL}/deepdive`,\n      view: DeepDive,\n      displayName: 'Deep Dive',\n      animationDelayForNavbar: 0.4,\n      showInNavbar: true,\n    },\n    {\n      pageLink: `${PUBLIC_URL}/essentials`,\n      view: Resources,\n      displayName: 'Essentials',\n      animationDelayForNavbar: 0.5,\n      showInNavbar: true,\n    },\n    {\n      pageLink: `${PUBLIC_URL}/faq`,\n      view: FAQ,\n      displayName: 'FAQ',\n      animationDelayForNavbar: 0.6,\n      showInNavbar: false,\n    },\n    {\n      pageLink: `${PUBLIC_URL}/state/:stateCode`,\n      view: State,\n      displayName: 'State',\n      animationDelayForNavbar: 0.7,\n      showInNavbar: false,\n    },\n  ];\n\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', false);\n\n  React.useEffect(() => {\n    if (darkMode) {\n      document.querySelector('body').classList.add('dark-mode');\n    } else {\n      document.querySelector('body').classList.remove('dark-mode');\n    }\n    ReactGA.initialize('UA-164643845-1');\n  }, [darkMode]);\n  initializeTracking();\n  return (\n    <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\n      <Router>\n        <ScrollToTop />\n        <Route\n          render={({ location }) => (\n            <div className=\"Almighty-Router\">\n              <Navbar\n                pages={pages}\n                darkMode={darkMode}\n                setDarkMode={setDarkMode}\n              />\n              <Switch location={location}>\n                {pages.map((page, index) => {\n                  return (\n                    <Route\n                      exact\n                      path={page.pageLink}\n                      component={page.view}\n                      key={index}\n                    />\n                  );\n                })}\n                <Redirect to={PUBLIC_URL || '/'} />\n              </Switch>\n            </div>\n          )}\n        />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}